package org.computate.site.enUS.cours.c001.l002;

import org.computate.site.enUS.ecrivain.ToutEcrivain;
import org.computate.site.enUS.couverture.Couverture;
import org.computate.site.enUS.requete.RequeteSiteEnUS;
import org.apache.commons.exec.CommandLine;
import org.apache.commons.lang3.StringUtils;
import java.util.ArrayList;
import org.computate.site.enUS.cluster.Cluster;
import javax.imageio.ImageIO;
import org.computate.site.enUS.page.parti.PagePart;
import org.apache.commons.exec.DefaultExecutor;
import java.awt.image.BufferedImage;
import org.apache.solr.client.solrj.response.QueryResponse;
import org.computate.site.enUS.cours.c001.C001Lecon;
import org.apache.commons.text.StringEscapeUtils;
import org.computate.site.enUS.contexte.SiteContexteEnUS;
import java.io.File;
import org.apache.solr.client.solrj.SolrClient;
import java.util.Objects;
import org.computate.site.enUS.page.parti.QuestionReponse;
import io.vertx.core.json.JsonArray;
import org.apache.solr.common.SolrDocument;
import org.computate.site.enUS.page.parti.PageParagraphe;
import java.util.List;
import org.apache.solr.client.solrj.SolrQuery;
import org.apache.solr.client.solrj.util.ClientUtils;
import org.apache.solr.common.SolrInputDocument;
import org.apache.commons.lang3.exception.ExceptionUtils;

/**	
 * <br/><a href="http://localhost:10383/solr/computate/select?q=*:*&fq=partEstClasse_indexed_boolean:true&fq=classeNomCanonique_enUS_indexed_string:org.computate.site.enUS.cours.c001.l002.C001L002ChoisirSystemeExploitation&fq=classeEtendGen_indexed_boolean:true">Trouver la classe  dans Solr</a>
 * <br/>
 **/
public abstract class C001L002ChoisirSystemeExploitationGen<DEV> extends C001Lecon {

	public static final String C001L002ChoisirSystemeExploitation_UnNom = "a lesson";
	public static final String C001L002ChoisirSystemeExploitation_Ce = "this ";
	public static final String C001L002ChoisirSystemeExploitation_CeNom = "this lesson";
	public static final String C001L002ChoisirSystemeExploitation_Un = "an ";
	public static final String C001L002ChoisirSystemeExploitation_LeNom = "the lesson";
	public static final String C001L002ChoisirSystemeExploitation_NomSingulier = "lesson";
	public static final String C001L002ChoisirSystemeExploitation_NomPluriel = "lessons";
	public static final String C001L002ChoisirSystemeExploitation_NomActuel = "current lesson";
	public static final String C001L002ChoisirSystemeExploitation_TousNom = "the lessons";
	public static final String C001L002ChoisirSystemeExploitation_RechercherTousNomPar = "search lessons by ";
	public static final String C001L002ChoisirSystemeExploitation_H1 = "What is the best operating system to develop my website? ";
	public static final String C001L002ChoisirSystemeExploitation_H2 = "Try my favorite, CentOS 7. ";
	public static final String C001L002ChoisirSystemeExploitation_LesNoms = "the lessons";
	public static final String C001L002ChoisirSystemeExploitation_AucunNomTrouve = "no lesson found";
	public static final String C001L002ChoisirSystemeExploitation_NomVar = "lesson";
	public static final String C001L002ChoisirSystemeExploitation_DeNom = "of lesson";
	public static final String C001L002ChoisirSystemeExploitation_Couleur = "green";
	public static final String C001L002ChoisirSystemeExploitation_IconeGroupe = "regular";
	public static final String C001L002ChoisirSystemeExploitation_IconeNom = "book";
	public static final String C001L002ChoisirSystemeExploitationFrFRPage_Uri = "/frFR/cours/001/002-choisir-votre-system-exploitation";
	public static final String C001L002ChoisirSystemeExploitationEnUSPage_Uri = "/enUS/course/001/002-choose-your-operating-system";

	///////////
	// intro //
	///////////

	public static final String introP1 = "Are you wondering, how do I pick an operating system to develop my website? ";
	public static final String introP2 = "Between Windows, Mac and many versions of Linux, which one is the most stable, helpful and secure? ";
	public static final String introP = introP1 + introP2;

	/**	L'entité « intro »
	 *	Il est construit avant d'être initialisé avec le constructeur par défaut PageParagraphe(). 
	 */
	protected PageParagraphe intro = new PageParagraphe();
	public Couverture<PageParagraphe> introCouverture = new Couverture<PageParagraphe>().p(this).c(PageParagraphe.class).var("intro").o(intro);

	/**	<br/>L'entité « intro »
	 * Il est construit avant d'être initialisé avec le constructeur par défaut PageParagraphe(). 
	 * <br/><a href="http://localhost:10383/solr/computate/select?q=*:*&fq=partEstEntite_indexed_boolean:true&fq=classeNomCanonique_enUS_indexed_string:org.computate.site.enUS.cours.c001.l002.C001L002ChoisirSystemeExploitation&fq=classeEtendGen_indexed_boolean:true&fq=entiteVar_enUS_indexed_string:intro">Trouver l'entité intro dans Solr</a>
	 * <br/>
	 * @param intro est l'entité déjà construit. 
	 **/
	protected abstract void _intro(PageParagraphe o);

	public PageParagraphe getIntro() {
		return intro;
	}

	public void setIntro(PageParagraphe intro) {
		this.intro = intro;
		this.introCouverture.dejaInitialise = true;
	}
	protected C001L002ChoisirSystemeExploitation introInit() {
		if(intro != null) {
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(intro, "intro");
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(intro, "intro");
		}
		if(!introCouverture.dejaInitialise) {
			_intro(intro);
		}
		intro.initLoinPourClasse(requeteSite_);
		introCouverture.dejaInitialise(true);
		return (C001L002ChoisirSystemeExploitation)this;
	}
	public void htmlBodyIntro(PageParagraphe o) {
	}
	public void htmlBodyIntro() {
		intro.htmlAvant();
		htmlBodyIntro(intro);
		intro.htmlApres();
	}

	/////////
	// moi //
	/////////

	public static final String moiP1 = "Hello, my name is Christopher Tate. I am a Red Hat consultant and I love open source software. ";
	public static final String moiP2 = "I will help you create your own successful website, on your own computer, using open-source software. ";
	public static final String moiP3 = "I'll take you through the kind of computer I have to help you decide. ";
	public static final String moiP = moiP1 + moiP2 + moiP3;

	/**	L'entité « moi »
	 *	Il est construit avant d'être initialisé avec le constructeur par défaut PageParagraphe(). 
	 */
	protected PageParagraphe moi = new PageParagraphe();
	public Couverture<PageParagraphe> moiCouverture = new Couverture<PageParagraphe>().p(this).c(PageParagraphe.class).var("moi").o(moi);

	/**	<br/>L'entité « moi »
	 * Il est construit avant d'être initialisé avec le constructeur par défaut PageParagraphe(). 
	 * <br/><a href="http://localhost:10383/solr/computate/select?q=*:*&fq=partEstEntite_indexed_boolean:true&fq=classeNomCanonique_enUS_indexed_string:org.computate.site.enUS.cours.c001.l002.C001L002ChoisirSystemeExploitation&fq=classeEtendGen_indexed_boolean:true&fq=entiteVar_enUS_indexed_string:moi">Trouver l'entité moi dans Solr</a>
	 * <br/>
	 * @param moi est l'entité déjà construit. 
	 **/
	protected abstract void _moi(PageParagraphe o);

	public PageParagraphe getMoi() {
		return moi;
	}

	public void setMoi(PageParagraphe moi) {
		this.moi = moi;
		this.moiCouverture.dejaInitialise = true;
	}
	protected C001L002ChoisirSystemeExploitation moiInit() {
		if(moi != null) {
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(moi, "moi");
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(moi, "moi");
		}
		if(!moiCouverture.dejaInitialise) {
			_moi(moi);
		}
		moi.initLoinPourClasse(requeteSite_);
		moiCouverture.dejaInitialise(true);
		return (C001L002ChoisirSystemeExploitation)this;
	}
	public void htmlBodyMoi(PageParagraphe o) {
	}
	public void htmlBodyMoi() {
		moi.htmlAvant();
		htmlBodyMoi(moi);
		moi.htmlApres();
	}

	//////////////
	// portable //
	//////////////

	public static final String portableQuestion1 = "Can I develop a website on a laptop? ";
	public static final String portableQuestion = portableQuestion1;
	public static final String portableQuestionCourt1 = "Can I develop a website on a laptop? ";
	public static final String portableQuestionCourt = portableQuestionCourt1;
	public static final String portableReponse1 = "Definitely, or a tower computer, your choice. ";
	public static final String portableReponse = portableReponse1;
	public static final String portableReponseCourt1 = "Definitely, or a tower computer. ";
	public static final String portableReponseCourt = portableReponseCourt1;
	public static final String portableP1 = "A laptop is great for developing a website, especially if you are on the road a lot. ";
	public static final String portableP2 = "Laptops run on more expensive hardware, so it costs more to purchase a powerful laptop. ";
	public static final String portableP3 = "You can get more life out of a tower computer. ";
	public static final String portableP4 = "You can also get more RAM, processing power and disk space for cheaper purchasing a tower computer. ";
	public static final String portableP5 = "You can also develop the same website on more than one computer by using online source control like ";
	public static final String portableP6 = "github.com";
	public static final String portableP7 = ". ";
	public static final String portableP = portableP1 + portableP2 + portableP3 + portableP4 + portableP5 + portableP6 + portableP7;

	/**	L'entité « portable »
	 *	Il est construit avant d'être initialisé avec le constructeur par défaut QuestionReponse(). 
	 */
	protected QuestionReponse portable = new QuestionReponse();
	public Couverture<QuestionReponse> portableCouverture = new Couverture<QuestionReponse>().p(this).c(QuestionReponse.class).var("portable").o(portable);

	/**	<br/>L'entité « portable »
	 * Il est construit avant d'être initialisé avec le constructeur par défaut QuestionReponse(). 
	 * <br/><a href="http://localhost:10383/solr/computate/select?q=*:*&fq=partEstEntite_indexed_boolean:true&fq=classeNomCanonique_enUS_indexed_string:org.computate.site.enUS.cours.c001.l002.C001L002ChoisirSystemeExploitation&fq=classeEtendGen_indexed_boolean:true&fq=entiteVar_enUS_indexed_string:portable">Trouver l'entité portable dans Solr</a>
	 * <br/>
	 * @param portable est l'entité déjà construit. 
	 **/
	protected abstract void _portable(QuestionReponse o);

	public QuestionReponse getPortable() {
		return portable;
	}

	public void setPortable(QuestionReponse portable) {
		this.portable = portable;
		this.portableCouverture.dejaInitialise = true;
	}
	protected C001L002ChoisirSystemeExploitation portableInit() {
		if(portable != null) {
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(portable, "portable");
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(portable, "portable");
		}
		if(!portableCouverture.dejaInitialise) {
			_portable(portable);
		}
		portable.initLoinPourClasse(requeteSite_);
		portableCouverture.dejaInitialise(true);
		return (C001L002ChoisirSystemeExploitation)this;
	}
	public void htmlBodyPortable(QuestionReponse o) {
	}
	public void htmlBodyPortable() {
		portable.htmlAvant();
		htmlBodyPortable(portable);
		portable.htmlApres();
	}

	/////////////
	// serveur //
	/////////////

	public static final String serveurQuestion1 = "Is a rackmount server at a hosting company required to launch my site? ";
	public static final String serveurQuestion = serveurQuestion1;
	public static final String serveurQuestionCourt1 = "Do I need a rackmount server? ";
	public static final String serveurQuestionCourt = serveurQuestionCourt1;
	public static final String serveurReponse1 = "Develop your site on your own computer, deploy the site to the open source OpenShift online. ";
	public static final String serveurReponse = serveurReponse1;
	public static final String serveurReponseCourt1 = "Develop at home, deploy to OpenShift. ";
	public static final String serveurReponseCourt = serveurReponseCourt1;
	public static final String serveurP1 = "A laptop is great for developing a website, especially if you are on the road a lot. ";
	public static final String serveurP2 = "Laptops run on more expensive hardware, so it costs more to purchase a powerful laptop. ";
	public static final String serveurP3 = "You can get more life out of a tower computer. ";
	public static final String serveurP4 = "You can also get more RAM, processing power and disk space for cheaper purchasing a tower computer. ";
	public static final String serveurP5 = "You can also develop the same website on more than one computer by using online source control like ";
	public static final String serveurP6 = "github.com";
	public static final String serveurP7 = ". ";
	public static final String serveurP = serveurP1 + serveurP2 + serveurP3 + serveurP4 + serveurP5 + serveurP6 + serveurP7;

	/**	L'entité « serveur »
	 *	Il est construit avant d'être initialisé avec le constructeur par défaut QuestionReponse(). 
	 */
	protected QuestionReponse serveur = new QuestionReponse();
	public Couverture<QuestionReponse> serveurCouverture = new Couverture<QuestionReponse>().p(this).c(QuestionReponse.class).var("serveur").o(serveur);

	/**	<br/>L'entité « serveur »
	 * Il est construit avant d'être initialisé avec le constructeur par défaut QuestionReponse(). 
	 * <br/><a href="http://localhost:10383/solr/computate/select?q=*:*&fq=partEstEntite_indexed_boolean:true&fq=classeNomCanonique_enUS_indexed_string:org.computate.site.enUS.cours.c001.l002.C001L002ChoisirSystemeExploitation&fq=classeEtendGen_indexed_boolean:true&fq=entiteVar_enUS_indexed_string:serveur">Trouver l'entité serveur dans Solr</a>
	 * <br/>
	 * @param serveur est l'entité déjà construit. 
	 **/
	protected abstract void _serveur(QuestionReponse o);

	public QuestionReponse getServeur() {
		return serveur;
	}

	public void setServeur(QuestionReponse serveur) {
		this.serveur = serveur;
		this.serveurCouverture.dejaInitialise = true;
	}
	protected C001L002ChoisirSystemeExploitation serveurInit() {
		if(serveur != null) {
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(serveur, "serveur");
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(serveur, "serveur");
		}
		if(!serveurCouverture.dejaInitialise) {
			_serveur(serveur);
		}
		serveur.initLoinPourClasse(requeteSite_);
		serveurCouverture.dejaInitialise(true);
		return (C001L002ChoisirSystemeExploitation)this;
	}
	public void htmlBodyServeur(QuestionReponse o) {
	}
	public void htmlBodyServeur() {
		serveur.htmlAvant();
		htmlBodyServeur(serveur);
		serveur.htmlApres();
	}

	//////////////
	// initLoin //
	//////////////

	protected boolean dejaInitialiseC001L002ChoisirSystemeExploitation = false;

	public C001L002ChoisirSystemeExploitation initLoinC001L002ChoisirSystemeExploitation(RequeteSiteEnUS requeteSite_) {
		setRequeteSite_(requeteSite_);
		if(!dejaInitialiseC001L002ChoisirSystemeExploitation) {
			dejaInitialiseC001L002ChoisirSystemeExploitation = true;
			initLoinC001L002ChoisirSystemeExploitation();
		}
		return (C001L002ChoisirSystemeExploitation)this;
	}

	public void initLoinC001L002ChoisirSystemeExploitation() {
		super.initLoinC001Lecon(requeteSite_);
		initC001L002ChoisirSystemeExploitation();
	}

	public void initC001L002ChoisirSystemeExploitation() {
		introInit();
		moiInit();
		portableInit();
		serveurInit();
	}

	@Override public void initLoinPourClasse(RequeteSiteEnUS requeteSite_) {
		initLoinC001L002ChoisirSystemeExploitation(requeteSite_);
	}

	/////////////////
	// requeteSite //
	/////////////////

	public void requeteSiteC001L002ChoisirSystemeExploitation(RequeteSiteEnUS requeteSite_) {
			super.requeteSiteC001Lecon(requeteSite_);
		if(intro != null)
			intro.setRequeteSite_(requeteSite_);
		if(moi != null)
			moi.setRequeteSite_(requeteSite_);
		if(portable != null)
			portable.setRequeteSite_(requeteSite_);
		if(serveur != null)
			serveur.setRequeteSite_(requeteSite_);
	}

	public void requeteSitePourClasse(RequeteSiteEnUS requeteSite_) {
		requeteSiteC001L002ChoisirSystemeExploitation(requeteSite_);
	}

	/////////////
	// obtenir //
	/////////////

	@Override public Object obtenirPourClasse(String var) throws Exception {
		String[] vars = StringUtils.split(var, ".");
		Object o = null;
		for(String v : vars) {
			if(o == null)
				o = obtenirC001L002ChoisirSystemeExploitation(v);
			else if(o instanceof Cluster) {
				Cluster cluster = (Cluster)o;
				o = cluster.obtenirPourClasse(v);
			}
		}
		return o;
	}
	public Object obtenirC001L002ChoisirSystemeExploitation(String var) throws Exception {
		C001L002ChoisirSystemeExploitation oC001L002ChoisirSystemeExploitation = (C001L002ChoisirSystemeExploitation)this;
		switch(var) {
			case "intro":
				return oC001L002ChoisirSystemeExploitation.intro;
			case "moi":
				return oC001L002ChoisirSystemeExploitation.moi;
			case "portable":
				return oC001L002ChoisirSystemeExploitation.portable;
			case "serveur":
				return oC001L002ChoisirSystemeExploitation.serveur;
			default:
				return super.obtenirC001Lecon(var);
		}
	}

	///////////////
	// attribuer //
	///////////////

	@Override public boolean attribuerPourClasse(String var, Object val) {
		String[] vars = StringUtils.split(var, ".");
		Object o = null;
		for(String v : vars) {
			if(o == null)
				o = attribuerC001L002ChoisirSystemeExploitation(v, val);
			else if(o instanceof Cluster) {
				Cluster cluster = (Cluster)o;
				o = cluster.attribuerPourClasse(v, val);
			}
		}
		return o != null;
	}
	public Object attribuerC001L002ChoisirSystemeExploitation(String var, Object val) {
		C001L002ChoisirSystemeExploitation oC001L002ChoisirSystemeExploitation = (C001L002ChoisirSystemeExploitation)this;
		switch(var) {
			default:
				return super.attribuerC001Lecon(var, val);
		}
	}

	/////////////
	// definir //
	/////////////

	@Override public boolean definirPourClasse(String var, String val) {
		String[] vars = StringUtils.split(var, ".");
		Object o = null;
		if(val != null) {
			for(String v : vars) {
				if(o == null)
					o = definirC001L002ChoisirSystemeExploitation(v, val);
				else if(o instanceof Cluster) {
					Cluster cluster = (Cluster)o;
					o = cluster.definirPourClasse(v, val);
				}
			}
		}
		return o != null;
	}
	public Object definirC001L002ChoisirSystemeExploitation(String var, String val) {
		switch(var) {
			default:
				return super.definirC001Lecon(var, val);
		}
	}

	///////////
	// image //
	///////////

	public static void image() {
		try {
			DefaultExecutor executeur = new DefaultExecutor();
			{
				new File("/usr/local/src/computate.org-static/png/frFR/cours/001").mkdirs();
				executeur.execute(CommandLine.parse("/usr/bin/CutyCapt --url=https://site.computate.org:10080/frFR/cours/001/002-choisir-votre-system-exploitation?pageRecapituler=true --out=/usr/local/src/computate.org-static/png/frFR/cours/001/002-choisir-votre-system-exploitation-999.png"));
				BufferedImage img = ImageIO.read(new File("/usr/local/src/computate.org-static/png/frFR/cours/001/002-choisir-votre-system-exploitation-999.png"));
				System.out.println("C001L002ChoisirSystemeExploitationFrFRPage");
				System.out.println(" * ImageLargeur.frFR: " + img.getWidth());
				System.out.println(" * ImageHauteur.frFR: " + img.getHeight());
			}
			{
				new File("/usr/local/src/computate.org-static/png/enUS/course/001").mkdirs();
				executeur.execute(CommandLine.parse("/usr/bin/CutyCapt --url=https://site.computate.org:10080/enUS/course/001/002-choose-your-operating-system?pageRecapituler=true --out=/usr/local/src/computate.org-static/png/enUS/course/001/002-choose-your-operating-system-999.png"));
				BufferedImage img = ImageIO.read(new File("/usr/local/src/computate.org-static/png/enUS/course/001/002-choose-your-operating-system-999.png"));
				System.out.println("C001L002ChoisirSystemeExploitationEnUSPage");
				System.out.println(" * ImageLargeur.enUS: " + img.getWidth());
				System.out.println(" * ImageHauteur.enUS: " + img.getHeight());
			}
		} catch(Exception e) {
			ExceptionUtils.rethrow(e);
		}
	}

	/////////////
	// indexer //
	/////////////

	public static void indexer() {
		try {
			RequeteSiteEnUS requeteSite = new RequeteSiteEnUS();
			requeteSite.initLoinRequeteSiteEnUS();
			SiteContexteEnUS siteContexte = new SiteContexteEnUS();
			siteContexte.getConfigSite().setConfigChemin("/usr/local/src/computate.org/config/computate.org.config");
			siteContexte.initLoinSiteContexteEnUS();
			siteContexte.setRequeteSite_(requeteSite);
			requeteSite.setSiteContexte_(siteContexte);
			SolrQuery rechercheSolr = new SolrQuery();
			rechercheSolr.setQuery("*:*");
			rechercheSolr.setRows(1);
			rechercheSolr.addFilterQuery("id:" + ClientUtils.escapeQueryChars("org.computate.site.enUS.cours.c001.l002.C001L002ChoisirSystemeExploitation"));
			QueryResponse reponseRecherche = requeteSite.getSiteContexte_().getClientSolr().query(rechercheSolr);
			if(reponseRecherche.getResults().size() > 0)
				requeteSite.setDocumentSolr(reponseRecherche.getResults().get(0));
			C001L002ChoisirSystemeExploitation o = new C001L002ChoisirSystemeExploitation();
			o.requeteSiteC001L002ChoisirSystemeExploitation(requeteSite);
			o.initLoinC001L002ChoisirSystemeExploitation(requeteSite);
			o.indexerC001L002ChoisirSystemeExploitation();
		} catch(Exception e) {
			ExceptionUtils.rethrow(e);
		}
	}


	@Override public void indexerPourClasse() throws Exception {
		indexerC001L002ChoisirSystemeExploitation();
	}

	@Override public void indexerPourClasse(SolrInputDocument document) throws Exception {
		indexerC001L002ChoisirSystemeExploitation(document);
	}

	public void indexerC001L002ChoisirSystemeExploitation(SolrClient clientSolr) throws Exception {
		SolrInputDocument document = new SolrInputDocument();
		indexerC001L002ChoisirSystemeExploitation(document);
		clientSolr.add(document);
		clientSolr.commit();
	}

	public void indexerC001L002ChoisirSystemeExploitation() throws Exception {
		SolrInputDocument document = new SolrInputDocument();
		indexerC001L002ChoisirSystemeExploitation(document);
		SolrClient clientSolr = requeteSite_.getSiteContexte_().getClientSolr();
		clientSolr.add(document);
		clientSolr.commit();
	}

	public void indexerC001L002ChoisirSystemeExploitation(SolrInputDocument document) throws Exception {
		super.indexerC001Lecon(document);

	}

	public void desindexerC001L002ChoisirSystemeExploitation() throws Exception {
		RequeteSiteEnUS requeteSite = new RequeteSiteEnUS();
		requeteSite.initLoinRequeteSiteEnUS();
		SiteContexteEnUS siteContexte = new SiteContexteEnUS();
		siteContexte.initLoinSiteContexteEnUS();
		siteContexte.setRequeteSite_(requeteSite);
		requeteSite.setSiteContexte_(siteContexte);
		requeteSite.setConfigSite_(siteContexte.getConfigSite());
		initLoinC001L002ChoisirSystemeExploitation(siteContexte.getRequeteSite_());
		SolrClient clientSolr = siteContexte.getClientSolr();
		clientSolr.deleteById(id.toString());
		clientSolr.commit();
	}

	/////////////
	// stocker //
	/////////////

	@Override public void stockerPourClasse(SolrDocument solrDocument) {
		stockerC001L002ChoisirSystemeExploitation(solrDocument);
	}
	public void stockerC001L002ChoisirSystemeExploitation(SolrDocument solrDocument) {
		C001L002ChoisirSystemeExploitation oC001L002ChoisirSystemeExploitation = (C001L002ChoisirSystemeExploitation)this;

		super.stockerC001Lecon(solrDocument);
	}

	///////////////////
	// htmlBodyCourt //
	///////////////////

	public void htmlBodyCourt() {
		htmlBodyCourtC001L002ChoisirSystemeExploitation();
	}

	public void htmlBodyCourtC001L002ChoisirSystemeExploitation() {
		if(intro != null)
			intro.htmlBodyCourt();
		if(moi != null)
			moi.htmlBodyCourt();
		if(portable != null)
			portable.htmlBodyCourt();
		if(serveur != null)
			serveur.htmlBodyCourt();
	}

	//////////////
	// htmlBody //
	//////////////

	@Override public void htmlBody() {
		htmlBodyC001L002ChoisirSystemeExploitation();
		super.htmlBody();
	}

	public void htmlBodyC001L002ChoisirSystemeExploitation() {
		if(intro != null)
			intro.htmlBody();
		if(moi != null)
			moi.htmlBody();
		((C001L002ChoisirSystemeExploitation)this).htmlBodyPortable();
		((C001L002ChoisirSystemeExploitation)this).htmlBodyServeur();
	}

	//////////////
	// hashCode //
	//////////////

	@Override public int hashCode() {
		return Objects.hash(super.hashCode());
	}

	////////////
	// equals //
	////////////

	@Override public boolean equals(Object o) {
		if(this == o)
			return true;
		if(!(o instanceof C001L002ChoisirSystemeExploitation))
			return false;
		C001L002ChoisirSystemeExploitation that = (C001L002ChoisirSystemeExploitation)o;
		return super.equals(o);
	}

	//////////////
	// toString //
	//////////////

	@Override public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append(super.toString() + "\n");
		sb.append("C001L002ChoisirSystemeExploitation {");
		sb.append(" }");
		return sb.toString();
	}

	public static final String[] C001L002ChoisirSystemeExploitationVals = new String[] { introP1, introP2, moiP1, moiP2, moiP3, portableQuestion1, portableQuestionCourt1, portableReponse1, portableReponseCourt1, portableP1, portableP2, portableP3, portableP4, portableP5, portableP6, portableP7, serveurQuestion1, serveurQuestionCourt1, serveurReponse1, serveurReponseCourt1, serveurP1, serveurP2, serveurP3, serveurP4, serveurP5, serveurP6, serveurP7 };
}
