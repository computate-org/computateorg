package org.computate.site.enUS.cours.c001.l002;

import org.computate.site.enUS.ecrivain.ToutEcrivain;
import org.computate.site.enUS.couverture.Couverture;
import org.computate.site.enUS.requete.RequeteSiteEnUS;
import org.apache.commons.exec.CommandLine;
import org.apache.commons.lang3.StringUtils;
import java.util.ArrayList;
import org.computate.site.enUS.cluster.Cluster;
import javax.imageio.ImageIO;
import org.computate.site.enUS.page.parti.PagePart;
import org.apache.commons.exec.DefaultExecutor;
import java.awt.image.BufferedImage;
import org.apache.solr.client.solrj.response.QueryResponse;
import org.computate.site.enUS.cours.c001.C001Lecon;
import org.apache.commons.text.StringEscapeUtils;
import org.computate.site.enUS.contexte.SiteContexteEnUS;
import java.io.File;
import org.apache.solr.client.solrj.SolrClient;
import java.util.Objects;
import org.computate.site.enUS.page.parti.QuestionReponse;
import io.vertx.core.json.JsonArray;
import org.apache.solr.common.SolrDocument;
import org.computate.site.enUS.page.parti.PageParagraphe;
import java.util.List;
import org.apache.solr.client.solrj.SolrQuery;
import org.apache.solr.client.solrj.util.ClientUtils;
import org.apache.solr.common.SolrInputDocument;
import org.apache.commons.lang3.exception.ExceptionUtils;

/**	
 * <br/><a href="http://localhost:10383/solr/computate/select?q=*:*&fq=partEstClasse_indexed_boolean:true&fq=classeNomCanonique_enUS_indexed_string:org.computate.site.enUS.cours.c001.l002.C001L002ChoisirSystemeExploitation&fq=classeEtendGen_indexed_boolean:true">Trouver la classe  dans Solr</a>
 * <br/>
 **/
public abstract class C001L002ChoisirSystemeExploitationGen<DEV> extends C001Lecon {

	public static final String C001L002ChoisirSystemeExploitation_UnNom = "a lesson";
	public static final String C001L002ChoisirSystemeExploitation_Ce = "this ";
	public static final String C001L002ChoisirSystemeExploitation_CeNom = "this lesson";
	public static final String C001L002ChoisirSystemeExploitation_Un = "an ";
	public static final String C001L002ChoisirSystemeExploitation_LeNom = "the lesson";
	public static final String C001L002ChoisirSystemeExploitation_NomSingulier = "lesson";
	public static final String C001L002ChoisirSystemeExploitation_NomPluriel = "lessons";
	public static final String C001L002ChoisirSystemeExploitation_NomActuel = "current lesson";
	public static final String C001L002ChoisirSystemeExploitation_TousNom = "the lessons";
	public static final String C001L002ChoisirSystemeExploitation_RechercherTousNomPar = "search lessons by ";
	public static final String C001L002ChoisirSystemeExploitation_H1 = "What is the best operating system to develop my website? ";
	public static final String C001L002ChoisirSystemeExploitation_H2 = "Try my favorite, CentOS 7. ";
	public static final String C001L002ChoisirSystemeExploitation_LesNoms = "the lessons";
	public static final String C001L002ChoisirSystemeExploitation_AucunNomTrouve = "no lesson found";
	public static final String C001L002ChoisirSystemeExploitation_NomVar = "lesson";
	public static final String C001L002ChoisirSystemeExploitation_DeNom = "of lesson";
	public static final String C001L002ChoisirSystemeExploitation_Couleur = "green";
	public static final String C001L002ChoisirSystemeExploitation_IconeGroupe = "regular";
	public static final String C001L002ChoisirSystemeExploitation_IconeNom = "question";
	public static final String C001L002ChoisirSystemeExploitationFrFRPage_Uri = "/frFR/cours/001/002-choisir-votre-system-exploitation";
	public static final String C001L002ChoisirSystemeExploitationFrFRPage_ImageUri = "/png/frFR/cours/001/002-choisir-votre-system-exploitation-999.png";
	public static final String C001L002ChoisirSystemeExploitationEnUSPage_Uri = "/enUS/course/001/002-choose-your-operating-system";
	public static final String C001L002ChoisirSystemeExploitationEnUSPage_ImageUri = "/png/enUS/course/001/002-choose-your-operating-system-999.png";

	///////////
	// intro //
	///////////

	public static final String introP1 = "Are you wondering, how do I pick an operating system to develop my website? ";
	public static final String introP2 = "Between Windows, Mac and many versions of Linux, which one is the most stable, helpful and secure? ";
	public static final String introP = introP1 + introP2;

	/**	L'entité « intro »
	 *	Il est construit avant d'être initialisé avec le constructeur par défaut PageParagraphe(). 
	 */
	protected PageParagraphe intro = new PageParagraphe();
	public Couverture<PageParagraphe> introCouverture = new Couverture<PageParagraphe>().p(this).c(PageParagraphe.class).var("intro").o(intro);

	/**	<br/>L'entité « intro »
	 * Il est construit avant d'être initialisé avec le constructeur par défaut PageParagraphe(). 
	 * <br/><a href="http://localhost:10383/solr/computate/select?q=*:*&fq=partEstEntite_indexed_boolean:true&fq=classeNomCanonique_enUS_indexed_string:org.computate.site.enUS.cours.c001.l002.C001L002ChoisirSystemeExploitation&fq=classeEtendGen_indexed_boolean:true&fq=entiteVar_enUS_indexed_string:intro">Trouver l'entité intro dans Solr</a>
	 * <br/>
	 * @param intro est l'entité déjà construit. 
	 **/
	protected abstract void _intro(PageParagraphe o);

	public PageParagraphe getIntro() {
		return intro;
	}

	public void setIntro(PageParagraphe intro) {
		this.intro = intro;
		this.introCouverture.dejaInitialise = true;
	}
	protected C001L002ChoisirSystemeExploitation introInit() {
		if(intro != null) {
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(intro, "intro");
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(intro, "intro");
		}
		if(!introCouverture.dejaInitialise) {
			_intro(intro);
		}
		intro.initLoinPourClasse(requeteSite_);
		introCouverture.dejaInitialise(true);
		return (C001L002ChoisirSystemeExploitation)this;
	}
	public void htmlBodyIntro(PageParagraphe o) {
	}
	public void htmlBodyIntro() {
		intro.htmlAvant();
		htmlBodyIntro(intro);
		intro.htmlApres();
	}

	/////////
	// moi //
	/////////

	public static final String moiP1 = "Hello, my name is Christopher Tate. I am a Red Hat consultant and I love open source software. ";
	public static final String moiP2 = "I will help you create your own successful website, on your own computer, using open-source software. ";
	public static final String moiP3 = "I've tried many operating systems over the years. ";
	public static final String moiP4 = "After switching to linux a decade ago, I've tried many Linux distros. ";
	public static final String moiP5 = "In terms of stability, usefulness and security, I choose CentOS 7 Linux, and I'll help you get started too. ";
	public static final String moiP = moiP1 + moiP2 + moiP3 + moiP4 + moiP5;

	/**	L'entité « moi »
	 *	Il est construit avant d'être initialisé avec le constructeur par défaut PageParagraphe(). 
	 */
	protected PageParagraphe moi = new PageParagraphe();
	public Couverture<PageParagraphe> moiCouverture = new Couverture<PageParagraphe>().p(this).c(PageParagraphe.class).var("moi").o(moi);

	/**	<br/>L'entité « moi »
	 * Il est construit avant d'être initialisé avec le constructeur par défaut PageParagraphe(). 
	 * <br/><a href="http://localhost:10383/solr/computate/select?q=*:*&fq=partEstEntite_indexed_boolean:true&fq=classeNomCanonique_enUS_indexed_string:org.computate.site.enUS.cours.c001.l002.C001L002ChoisirSystemeExploitation&fq=classeEtendGen_indexed_boolean:true&fq=entiteVar_enUS_indexed_string:moi">Trouver l'entité moi dans Solr</a>
	 * <br/>
	 * @param moi est l'entité déjà construit. 
	 **/
	protected abstract void _moi(PageParagraphe o);

	public PageParagraphe getMoi() {
		return moi;
	}

	public void setMoi(PageParagraphe moi) {
		this.moi = moi;
		this.moiCouverture.dejaInitialise = true;
	}
	protected C001L002ChoisirSystemeExploitation moiInit() {
		if(moi != null) {
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(moi, "moi");
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(moi, "moi");
		}
		if(!moiCouverture.dejaInitialise) {
			_moi(moi);
		}
		moi.initLoinPourClasse(requeteSite_);
		moiCouverture.dejaInitialise(true);
		return (C001L002ChoisirSystemeExploitation)this;
	}
	public void htmlBodyMoi(PageParagraphe o) {
	}
	public void htmlBodyMoi() {
		moi.htmlAvant();
		htmlBodyMoi(moi);
		moi.htmlApres();
	}

	/////////////
	// windows //
	/////////////

	public static final String windowsQuestion1 = "Can I launch a website on Microsoft Windows? ";
	public static final String windowsQuestion = windowsQuestion1;
	public static final String windowsQuestionCourt1 = "Launch a website on Microsoft Windows? ";
	public static final String windowsQuestionCourt = windowsQuestionCourt1;
	public static final String windowsReponse1 = "Microsoft Windows lacks the open-source solutions to launch a powerful website. ";
	public static final String windowsReponse = windowsReponse1;
	public static final String windowsReponseCourt1 = "Lacking open-source solutions";
	public static final String windowsReponseCourt = windowsReponseCourt1;
	public static final String windowsP1 = "Windows has inherently weak interprocess communication between dynamically linked libraries, ActiveX, other linking! ";
	public static final String windowsP2 = "Generic host processes that anonymously run processes in the background hiding their identity! ";
	public static final String windowsP3 = "Windows also has bad security allowing easy reset administrator passwords, and forces users to run applications as administrator. ";
	public static final String windowsP4 = "The worst part of all, when it comes to launching a serious website of your own, is that Microsoft Windows is not compatible with the open-source universe. ";
	public static final String windowsP = windowsP1 + windowsP2 + windowsP3 + windowsP4;

	/**	L'entité « windows »
	 *	Il est construit avant d'être initialisé avec le constructeur par défaut QuestionReponse(). 
	 */
	protected QuestionReponse windows = new QuestionReponse();
	public Couverture<QuestionReponse> windowsCouverture = new Couverture<QuestionReponse>().p(this).c(QuestionReponse.class).var("windows").o(windows);

	/**	<br/>L'entité « windows »
	 * Il est construit avant d'être initialisé avec le constructeur par défaut QuestionReponse(). 
	 * <br/><a href="http://localhost:10383/solr/computate/select?q=*:*&fq=partEstEntite_indexed_boolean:true&fq=classeNomCanonique_enUS_indexed_string:org.computate.site.enUS.cours.c001.l002.C001L002ChoisirSystemeExploitation&fq=classeEtendGen_indexed_boolean:true&fq=entiteVar_enUS_indexed_string:windows">Trouver l'entité windows dans Solr</a>
	 * <br/>
	 * @param windows est l'entité déjà construit. 
	 **/
	protected abstract void _windows(QuestionReponse o);

	public QuestionReponse getWindows() {
		return windows;
	}

	public void setWindows(QuestionReponse windows) {
		this.windows = windows;
		this.windowsCouverture.dejaInitialise = true;
	}
	protected C001L002ChoisirSystemeExploitation windowsInit() {
		if(windows != null) {
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(windows, "windows");
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(windows, "windows");
		}
		if(!windowsCouverture.dejaInitialise) {
			_windows(windows);
		}
		windows.initLoinPourClasse(requeteSite_);
		windowsCouverture.dejaInitialise(true);
		return (C001L002ChoisirSystemeExploitation)this;
	}
	public void htmlBodyWindows(QuestionReponse o) {
	}
	public void htmlBodyWindows() {
		windows.htmlAvant();
		htmlBodyWindows(windows);
		windows.htmlApres();
	}

	///////////
	// apple //
	///////////

	public static final String appleQuestion1 = "Can I launch a website on MacOS? ";
	public static final String appleQuestion = appleQuestion1;
	public static final String appleQuestionCourt1 = "Can I launch a website on MacOS? ";
	public static final String appleQuestionCourt = appleQuestionCourt1;
	public static final String appleReponse1 = "Buying the same hardware with Mac hardware and MacOS will cost much more than traditional PC hardware. ";
	public static final String appleReponse = appleReponse1;
	public static final String appleReponseCourt1 = "Hardware costs much more";
	public static final String appleReponseCourt = appleReponseCourt1;
	public static final String appleP1 = "I was recently working with someone who wanted all Apple hardware to develop their site. ";
	public static final String appleP2 = "When I told them they wanted 32 GiB of RAM and at least 4 physical CPU cores on that Mac, they told me the price would triple. ";
	public static final String appleP3 = "A good computer like that might cost $1100, but forking out $2000-$3000 for MacOS is just not sustainable. ";
	public static final String appleP4 = "There is no good reason to fork out triple the price for hardware running MacOS. ";
	public static final String appleP = appleP1 + appleP2 + appleP3 + appleP4;

	/**	L'entité « apple »
	 *	Il est construit avant d'être initialisé avec le constructeur par défaut QuestionReponse(). 
	 */
	protected QuestionReponse apple = new QuestionReponse();
	public Couverture<QuestionReponse> appleCouverture = new Couverture<QuestionReponse>().p(this).c(QuestionReponse.class).var("apple").o(apple);

	/**	<br/>L'entité « apple »
	 * Il est construit avant d'être initialisé avec le constructeur par défaut QuestionReponse(). 
	 * <br/><a href="http://localhost:10383/solr/computate/select?q=*:*&fq=partEstEntite_indexed_boolean:true&fq=classeNomCanonique_enUS_indexed_string:org.computate.site.enUS.cours.c001.l002.C001L002ChoisirSystemeExploitation&fq=classeEtendGen_indexed_boolean:true&fq=entiteVar_enUS_indexed_string:apple">Trouver l'entité apple dans Solr</a>
	 * <br/>
	 * @param apple est l'entité déjà construit. 
	 **/
	protected abstract void _apple(QuestionReponse o);

	public QuestionReponse getApple() {
		return apple;
	}

	public void setApple(QuestionReponse apple) {
		this.apple = apple;
		this.appleCouverture.dejaInitialise = true;
	}
	protected C001L002ChoisirSystemeExploitation appleInit() {
		if(apple != null) {
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(apple, "apple");
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(apple, "apple");
		}
		if(!appleCouverture.dejaInitialise) {
			_apple(apple);
		}
		apple.initLoinPourClasse(requeteSite_);
		appleCouverture.dejaInitialise(true);
		return (C001L002ChoisirSystemeExploitation)this;
	}
	public void htmlBodyApple(QuestionReponse o) {
	}
	public void htmlBodyApple() {
		apple.htmlAvant();
		htmlBodyApple(apple);
		apple.htmlApres();
	}

	////////////
	// debian //
	////////////

	public static final String debianQuestion1 = "How about Ubuntu, Linux Mint or Debian? ";
	public static final String debianQuestion = debianQuestion1;
	public static final String debianQuestionCourt1 = "Ubuntu, Linux Mint or Debian? ";
	public static final String debianQuestionCourt = debianQuestionCourt1;
	public static final String debianReponse1 = "Excellent choice! ";
	public static final String debianReponse = debianReponse1;
	public static final String debianReponseCourt1 = "Excellent choice! ";
	public static final String debianReponseCourt = debianReponseCourt1;
	public static final String debianP1 = "Ubuntu, Linux Mint and Debian are all excellent operating systems. ";
	public static final String debianP2 = "I don't, however, use these Debian based operating systems anymore. ";
	public static final String debianP3 = "I never really have a good reason why I stop using a Linux distro, because they all have their interesting uses. ";
	public static final String debianP4 = "It might be stability in a release, or a strange desktop behavior that makes me try something new. ";
	public static final String debianP5 = "But if you are already on one of these distros, there is not a pressing reason to switch, so keep enjoying your Linux distro. ";
	public static final String debianP = debianP1 + debianP2 + debianP3 + debianP4 + debianP5;

	/**	L'entité « debian »
	 *	Il est construit avant d'être initialisé avec le constructeur par défaut QuestionReponse(). 
	 */
	protected QuestionReponse debian = new QuestionReponse();
	public Couverture<QuestionReponse> debianCouverture = new Couverture<QuestionReponse>().p(this).c(QuestionReponse.class).var("debian").o(debian);

	/**	<br/>L'entité « debian »
	 * Il est construit avant d'être initialisé avec le constructeur par défaut QuestionReponse(). 
	 * <br/><a href="http://localhost:10383/solr/computate/select?q=*:*&fq=partEstEntite_indexed_boolean:true&fq=classeNomCanonique_enUS_indexed_string:org.computate.site.enUS.cours.c001.l002.C001L002ChoisirSystemeExploitation&fq=classeEtendGen_indexed_boolean:true&fq=entiteVar_enUS_indexed_string:debian">Trouver l'entité debian dans Solr</a>
	 * <br/>
	 * @param debian est l'entité déjà construit. 
	 **/
	protected abstract void _debian(QuestionReponse o);

	public QuestionReponse getDebian() {
		return debian;
	}

	public void setDebian(QuestionReponse debian) {
		this.debian = debian;
		this.debianCouverture.dejaInitialise = true;
	}
	protected C001L002ChoisirSystemeExploitation debianInit() {
		if(debian != null) {
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(debian, "debian");
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(debian, "debian");
		}
		if(!debianCouverture.dejaInitialise) {
			_debian(debian);
		}
		debian.initLoinPourClasse(requeteSite_);
		debianCouverture.dejaInitialise(true);
		return (C001L002ChoisirSystemeExploitation)this;
	}
	public void htmlBodyDebian(QuestionReponse o) {
	}
	public void htmlBodyDebian() {
		debian.htmlAvant();
		htmlBodyDebian(debian);
		debian.htmlApres();
	}

	////////////
	// centos //
	////////////

	public static final String centosQuestion1 = "What Linux distro would you chose? ";
	public static final String centosQuestion = centosQuestion1;
	public static final String centosQuestionCourt1 = "What Linux distro would you chose? ";
	public static final String centosQuestionCourt = centosQuestionCourt1;
	public static final String centosReponse1 = "CentOS 7 is my favorite distro. ";
	public static final String centosReponse = centosReponse1;
	public static final String centosReponseCourt1 = "I prefer CentOS 7";
	public static final String centosReponseCourt = centosReponseCourt1;
	public static final String centosP1 = "I learned to love CentOS 7 for it's excellent security. ";
	public static final String centosP2 = "Two great programs built into CentOS 7 for more security include firewalld and selinux. ";
	public static final String centosP3 = "CentOS also comes downstream from RHEL (Red Hat Enterprise Linux), which is the gold standard of Linux distros, but also costs a subscription to put into production. ";
	public static final String centosP4 = "But for a similar feel to RHEL, CentOS 7 is a great way to go for free. ";
	public static final String centosP5 = "Some people may prefer Ubuntu because of the additional software in it's apt-get package repository. ";
	public static final String centosP6 = "I found even though CentOS 7 has less software available in it's yum repo, I've been able to install the ones I use. ";
	public static final String centosP7 = "This includes multimedia applications like VLC, Kdenlive, Audacity, OBS and DVD codecs. ";
	public static final String centosP8 = "CentOS 7 has a lightweight user interface and is light on computer resources. ";
	public static final String centosP9 = "I've found good stability with CentOS 7 as well and also the power to scale. ";
	public static final String centosP10 = "The key is, though, to switch to Linux, where you can build powerful applications. ";
	public static final String centosP = centosP1 + centosP2 + centosP3 + centosP4 + centosP5 + centosP6 + centosP7 + centosP8 + centosP9 + centosP10;

	/**	L'entité « centos »
	 *	Il est construit avant d'être initialisé avec le constructeur par défaut QuestionReponse(). 
	 */
	protected QuestionReponse centos = new QuestionReponse();
	public Couverture<QuestionReponse> centosCouverture = new Couverture<QuestionReponse>().p(this).c(QuestionReponse.class).var("centos").o(centos);

	/**	<br/>L'entité « centos »
	 * Il est construit avant d'être initialisé avec le constructeur par défaut QuestionReponse(). 
	 * <br/><a href="http://localhost:10383/solr/computate/select?q=*:*&fq=partEstEntite_indexed_boolean:true&fq=classeNomCanonique_enUS_indexed_string:org.computate.site.enUS.cours.c001.l002.C001L002ChoisirSystemeExploitation&fq=classeEtendGen_indexed_boolean:true&fq=entiteVar_enUS_indexed_string:centos">Trouver l'entité centos dans Solr</a>
	 * <br/>
	 * @param centos est l'entité déjà construit. 
	 **/
	protected abstract void _centos(QuestionReponse o);

	public QuestionReponse getCentos() {
		return centos;
	}

	public void setCentos(QuestionReponse centos) {
		this.centos = centos;
		this.centosCouverture.dejaInitialise = true;
	}
	protected C001L002ChoisirSystemeExploitation centosInit() {
		if(centos != null) {
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(centos, "centos");
			((C001L002ChoisirSystemeExploitation)this).avantPagePart(centos, "centos");
		}
		if(!centosCouverture.dejaInitialise) {
			_centos(centos);
		}
		centos.initLoinPourClasse(requeteSite_);
		centosCouverture.dejaInitialise(true);
		return (C001L002ChoisirSystemeExploitation)this;
	}
	public void htmlBodyCentos(QuestionReponse o) {
	}
	public void htmlBodyCentos() {
		centos.htmlAvant();
		htmlBodyCentos(centos);
		centos.htmlApres();
	}

	//////////////
	// initLoin //
	//////////////

	protected boolean dejaInitialiseC001L002ChoisirSystemeExploitation = false;

	public C001L002ChoisirSystemeExploitation initLoinC001L002ChoisirSystemeExploitation(RequeteSiteEnUS requeteSite_) {
		setRequeteSite_(requeteSite_);
		if(!dejaInitialiseC001L002ChoisirSystemeExploitation) {
			dejaInitialiseC001L002ChoisirSystemeExploitation = true;
			initLoinC001L002ChoisirSystemeExploitation();
		}
		return (C001L002ChoisirSystemeExploitation)this;
	}

	public void initLoinC001L002ChoisirSystemeExploitation() {
		super.initLoinC001Lecon(requeteSite_);
		initC001L002ChoisirSystemeExploitation();
	}

	public void initC001L002ChoisirSystemeExploitation() {
		introInit();
		moiInit();
		windowsInit();
		appleInit();
		debianInit();
		centosInit();
	}

	@Override public void initLoinPourClasse(RequeteSiteEnUS requeteSite_) {
		initLoinC001L002ChoisirSystemeExploitation(requeteSite_);
	}

	/////////////////
	// requeteSite //
	/////////////////

	public void requeteSiteC001L002ChoisirSystemeExploitation(RequeteSiteEnUS requeteSite_) {
			super.requeteSiteC001Lecon(requeteSite_);
		if(intro != null)
			intro.setRequeteSite_(requeteSite_);
		if(moi != null)
			moi.setRequeteSite_(requeteSite_);
		if(windows != null)
			windows.setRequeteSite_(requeteSite_);
		if(apple != null)
			apple.setRequeteSite_(requeteSite_);
		if(debian != null)
			debian.setRequeteSite_(requeteSite_);
		if(centos != null)
			centos.setRequeteSite_(requeteSite_);
	}

	public void requeteSitePourClasse(RequeteSiteEnUS requeteSite_) {
		requeteSiteC001L002ChoisirSystemeExploitation(requeteSite_);
	}

	/////////////
	// obtenir //
	/////////////

	@Override public Object obtenirPourClasse(String var) throws Exception {
		String[] vars = StringUtils.split(var, ".");
		Object o = null;
		for(String v : vars) {
			if(o == null)
				o = obtenirC001L002ChoisirSystemeExploitation(v);
			else if(o instanceof Cluster) {
				Cluster cluster = (Cluster)o;
				o = cluster.obtenirPourClasse(v);
			}
		}
		return o;
	}
	public Object obtenirC001L002ChoisirSystemeExploitation(String var) throws Exception {
		C001L002ChoisirSystemeExploitation oC001L002ChoisirSystemeExploitation = (C001L002ChoisirSystemeExploitation)this;
		switch(var) {
			case "intro":
				return oC001L002ChoisirSystemeExploitation.intro;
			case "moi":
				return oC001L002ChoisirSystemeExploitation.moi;
			case "windows":
				return oC001L002ChoisirSystemeExploitation.windows;
			case "apple":
				return oC001L002ChoisirSystemeExploitation.apple;
			case "debian":
				return oC001L002ChoisirSystemeExploitation.debian;
			case "centos":
				return oC001L002ChoisirSystemeExploitation.centos;
			default:
				return super.obtenirC001Lecon(var);
		}
	}

	///////////////
	// attribuer //
	///////////////

	@Override public boolean attribuerPourClasse(String var, Object val) {
		String[] vars = StringUtils.split(var, ".");
		Object o = null;
		for(String v : vars) {
			if(o == null)
				o = attribuerC001L002ChoisirSystemeExploitation(v, val);
			else if(o instanceof Cluster) {
				Cluster cluster = (Cluster)o;
				o = cluster.attribuerPourClasse(v, val);
			}
		}
		return o != null;
	}
	public Object attribuerC001L002ChoisirSystemeExploitation(String var, Object val) {
		C001L002ChoisirSystemeExploitation oC001L002ChoisirSystemeExploitation = (C001L002ChoisirSystemeExploitation)this;
		switch(var) {
			default:
				return super.attribuerC001Lecon(var, val);
		}
	}

	/////////////
	// definir //
	/////////////

	@Override public boolean definirPourClasse(String var, String val) {
		String[] vars = StringUtils.split(var, ".");
		Object o = null;
		if(val != null) {
			for(String v : vars) {
				if(o == null)
					o = definirC001L002ChoisirSystemeExploitation(v, val);
				else if(o instanceof Cluster) {
					Cluster cluster = (Cluster)o;
					o = cluster.definirPourClasse(v, val);
				}
			}
		}
		return o != null;
	}
	public Object definirC001L002ChoisirSystemeExploitation(String var, String val) {
		switch(var) {
			default:
				return super.definirC001Lecon(var, val);
		}
	}

	///////////
	// image //
	///////////

	public static void image() {
		try {
			DefaultExecutor executeur = new DefaultExecutor();
			{
				new File("/usr/local/src/computate.org-static/png/frFR/cours/001").mkdirs();
				executeur.execute(CommandLine.parse("/usr/bin/CutyCapt --url=https://site.computate.org:10080/frFR/cours/001/002-choisir-votre-system-exploitation?pageRecapituler=true --out=/usr/local/src/computate.org-static/png/frFR/cours/001/002-choisir-votre-system-exploitation-999.png"));
				BufferedImage img = ImageIO.read(new File("/usr/local/src/computate.org-static/png/frFR/cours/001/002-choisir-votre-system-exploitation-999.png"));
				System.out.println("C001L002ChoisirSystemeExploitationFrFRPage");
				System.out.println(" * ImageLargeur.frFR: " + img.getWidth());
				System.out.println(" * ImageHauteur.frFR: " + img.getHeight());
			}
			{
				new File("/usr/local/src/computate.org-static/png/enUS/course/001").mkdirs();
				executeur.execute(CommandLine.parse("/usr/bin/CutyCapt --url=https://site.computate.org:10080/enUS/course/001/002-choose-your-operating-system?pageRecapituler=true --out=/usr/local/src/computate.org-static/png/enUS/course/001/002-choose-your-operating-system-999.png"));
				BufferedImage img = ImageIO.read(new File("/usr/local/src/computate.org-static/png/enUS/course/001/002-choose-your-operating-system-999.png"));
				System.out.println("C001L002ChoisirSystemeExploitationEnUSPage");
				System.out.println(" * ImageLargeur.enUS: " + img.getWidth());
				System.out.println(" * ImageHauteur.enUS: " + img.getHeight());
			}
		} catch(Exception e) {
			ExceptionUtils.rethrow(e);
		}
	}

	/////////////
	// indexer //
	/////////////

	public static void indexer() {
		try {
			RequeteSiteEnUS requeteSite = new RequeteSiteEnUS();
			requeteSite.initLoinRequeteSiteEnUS();
			SiteContexteEnUS siteContexte = new SiteContexteEnUS();
			siteContexte.getConfigSite().setConfigChemin("/usr/local/src/computate.org/config/computate.org.config");
			siteContexte.initLoinSiteContexteEnUS();
			siteContexte.setRequeteSite_(requeteSite);
			requeteSite.setSiteContexte_(siteContexte);
			SolrQuery rechercheSolr = new SolrQuery();
			rechercheSolr.setQuery("*:*");
			rechercheSolr.setRows(1);
			rechercheSolr.addFilterQuery("id:" + ClientUtils.escapeQueryChars("org.computate.site.enUS.cours.c001.l002.C001L002ChoisirSystemeExploitation"));
			QueryResponse reponseRecherche = requeteSite.getSiteContexte_().getClientSolr().query(rechercheSolr);
			if(reponseRecherche.getResults().size() > 0)
				requeteSite.setDocumentSolr(reponseRecherche.getResults().get(0));
			C001L002ChoisirSystemeExploitation o = new C001L002ChoisirSystemeExploitation();
			o.requeteSiteC001L002ChoisirSystemeExploitation(requeteSite);
			o.initLoinC001L002ChoisirSystemeExploitation(requeteSite);
			o.indexerC001L002ChoisirSystemeExploitation();
		} catch(Exception e) {
			ExceptionUtils.rethrow(e);
		}
	}


	@Override public void indexerPourClasse() throws Exception {
		indexerC001L002ChoisirSystemeExploitation();
	}

	@Override public void indexerPourClasse(SolrInputDocument document) throws Exception {
		indexerC001L002ChoisirSystemeExploitation(document);
	}

	public void indexerC001L002ChoisirSystemeExploitation(SolrClient clientSolr) throws Exception {
		SolrInputDocument document = new SolrInputDocument();
		indexerC001L002ChoisirSystemeExploitation(document);
		clientSolr.add(document);
		clientSolr.commit();
	}

	public void indexerC001L002ChoisirSystemeExploitation() throws Exception {
		SolrInputDocument document = new SolrInputDocument();
		indexerC001L002ChoisirSystemeExploitation(document);
		SolrClient clientSolr = requeteSite_.getSiteContexte_().getClientSolr();
		clientSolr.add(document);
		clientSolr.commit();
	}

	public void indexerC001L002ChoisirSystemeExploitation(SolrInputDocument document) throws Exception {
		super.indexerC001Lecon(document);

	}

	public void desindexerC001L002ChoisirSystemeExploitation() throws Exception {
		RequeteSiteEnUS requeteSite = new RequeteSiteEnUS();
		requeteSite.initLoinRequeteSiteEnUS();
		SiteContexteEnUS siteContexte = new SiteContexteEnUS();
		siteContexte.initLoinSiteContexteEnUS();
		siteContexte.setRequeteSite_(requeteSite);
		requeteSite.setSiteContexte_(siteContexte);
		requeteSite.setConfigSite_(siteContexte.getConfigSite());
		initLoinC001L002ChoisirSystemeExploitation(siteContexte.getRequeteSite_());
		SolrClient clientSolr = siteContexte.getClientSolr();
		clientSolr.deleteById(id.toString());
		clientSolr.commit();
	}

	/////////////
	// stocker //
	/////////////

	@Override public void stockerPourClasse(SolrDocument solrDocument) {
		stockerC001L002ChoisirSystemeExploitation(solrDocument);
	}
	public void stockerC001L002ChoisirSystemeExploitation(SolrDocument solrDocument) {
		C001L002ChoisirSystemeExploitation oC001L002ChoisirSystemeExploitation = (C001L002ChoisirSystemeExploitation)this;

		super.stockerC001Lecon(solrDocument);
	}

	///////////////////
	// htmlBodyCourt //
	///////////////////

	public void htmlBodyCourt() {
		htmlBodyCourtC001L002ChoisirSystemeExploitation();
	}

	public void htmlBodyCourtC001L002ChoisirSystemeExploitation() {
		if(intro != null)
			intro.htmlBodyCourt();
		if(moi != null)
			moi.htmlBodyCourt();
		if(windows != null)
			windows.htmlBodyCourt();
		if(apple != null)
			apple.htmlBodyCourt();
		if(debian != null)
			debian.htmlBodyCourt();
		if(centos != null)
			centos.htmlBodyCourt();
	}

	//////////////
	// htmlBody //
	//////////////

	@Override public void htmlBody() {
		htmlBodyC001L002ChoisirSystemeExploitation();
		super.htmlBody();
	}

	public void htmlBodyC001L002ChoisirSystemeExploitation() {
		if(intro != null)
			intro.htmlBody();
		if(moi != null)
			moi.htmlBody();
		((C001L002ChoisirSystemeExploitation)this).htmlBodyWindows();
		((C001L002ChoisirSystemeExploitation)this).htmlBodyApple();
		((C001L002ChoisirSystemeExploitation)this).htmlBodyDebian();
		((C001L002ChoisirSystemeExploitation)this).htmlBodyCentos();
	}

	//////////////
	// hashCode //
	//////////////

	@Override public int hashCode() {
		return Objects.hash(super.hashCode());
	}

	////////////
	// equals //
	////////////

	@Override public boolean equals(Object o) {
		if(this == o)
			return true;
		if(!(o instanceof C001L002ChoisirSystemeExploitation))
			return false;
		C001L002ChoisirSystemeExploitation that = (C001L002ChoisirSystemeExploitation)o;
		return super.equals(o);
	}

	//////////////
	// toString //
	//////////////

	@Override public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append(super.toString() + "\n");
		sb.append("C001L002ChoisirSystemeExploitation {");
		sb.append(" }");
		return sb.toString();
	}

	public static final String[] C001L002ChoisirSystemeExploitationVals = new String[] { introP1, introP2, moiP1, moiP2, moiP3, moiP4, moiP5, windowsQuestion1, windowsQuestionCourt1, windowsReponse1, windowsReponseCourt1, windowsP1, windowsP2, windowsP3, windowsP4, appleQuestion1, appleQuestionCourt1, appleReponse1, appleReponseCourt1, appleP1, appleP2, appleP3, appleP4, debianQuestion1, debianQuestionCourt1, debianReponse1, debianReponseCourt1, debianP1, debianP2, debianP3, debianP4, debianP5, centosQuestion1, centosQuestionCourt1, centosReponse1, centosReponseCourt1, centosP1, centosP2, centosP3, centosP4, centosP5, centosP6, centosP7, centosP8, centosP9, centosP10 };
}
