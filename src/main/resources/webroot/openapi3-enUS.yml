openapi: 3.0.0
info:
  title: "computateorg"
  version: 3.0.0
paths:

  /callback:
    get:
      operationId: callback
      x-vertx-event-bus: computateorg-enUS-callback
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /logout:
    get:
      operationId: logout
      x-vertx-event-bus: computateorg-enUS-logout
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /api/article:
    get:
      operationId: searchArticle
      x-vertx-event-bus: computateorg-enUS-Article
      description: >+
      summary: >+
      tags:
        - Article
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchArticleResponse'
    patch:
      operationId: patchArticle
      x-vertx-event-bus: computateorg-enUS-Article
      description: >+
      summary: >+
      tags:
        - Article
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHArticleRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHArticleResponse'
    post:
      operationId: postArticle
      x-vertx-event-bus: computateorg-enUS-Article
      description: >+
      summary: >+
      tags:
        - Article
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTArticleRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTArticleResponse'
  /api/article-import:
    put:
      operationId: putimportArticle
      x-vertx-event-bus: computateorg-enUS-Article
      description: >+
      summary: >+
      tags:
        - Article
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportArticleRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportArticleResponse'
  /api/article/{id}:
    get:
      operationId: getArticle
      x-vertx-event-bus: computateorg-enUS-Article
      description: >+
      summary: >+
      tags:
        - Article
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETArticleResponse'
  /article/{id}:
    get:
      operationId: searchpageArticleId
      x-vertx-event-bus: computateorg-enUS-Article
      description: >+
      summary: >+
      tags:
        - Article
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageArticleResponse'
  /article:
    get:
      operationId: searchpageArticle
      x-vertx-event-bus: computateorg-enUS-Article
      description: >+
      summary: >+
      tags:
        - Article
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageArticleResponse'
  /api/course:
    get:
      operationId: searchCourse
      x-vertx-event-bus: computateorg-enUS-Course
      description: >+
      summary: >+
      tags:
        - Course
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchCourseResponse'
  /api/course/{id}:
    get:
      operationId: getCourse
      x-vertx-event-bus: computateorg-enUS-Course
      description: >+
      summary: >+
      tags:
        - Course
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETCourseResponse'
  /enUS/course:
    get:
      operationId: searchpageCourse
      x-vertx-event-bus: computateorg-enUS-Course
      description: >+
      summary: >+
      tags:
        - Course
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageCourseResponse'
  /enUS/course/001:
    get:
      operationId: searchpageC001
      x-vertx-event-bus: computateorg-enUS-C001
      description: >+
      summary: >+
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageC001Response'
  /enUS/course/001/lessons:
    get:
      operationId: searchpageC001Lesson
      x-vertx-event-bus: computateorg-enUS-C001Lesson
      description: >+
      summary: >+
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageC001LessonResponse'
  /api/htm:
    get:
      operationId: searchSiteHtm
      x-vertx-event-bus: computateorg-enUS-SiteHtm
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - HTM
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchSiteHtmResponse'
    post:
      operationId: postSiteHtm
      x-vertx-event-bus: computateorg-enUS-SiteHtm
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - HTM
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSiteHtmRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTSiteHtmResponse'
    patch:
      operationId: patchSiteHtm
      x-vertx-event-bus: computateorg-enUS-SiteHtm
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - HTM
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSiteHtmRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHSiteHtmResponse'
  /api/htm-import:
    put:
      operationId: putimportSiteHtm
      x-vertx-event-bus: computateorg-enUS-SiteHtm
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - HTM
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportSiteHtmRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportSiteHtmResponse'
  /api/htm/{id}:
    get:
      operationId: getSiteHtm
      x-vertx-event-bus: computateorg-enUS-SiteHtm
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - HTM
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETSiteHtmResponse'
  /htm/{id}:
    get:
      operationId: searchpageSiteHtmId
      x-vertx-event-bus: computateorg-enUS-SiteHtm
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - HTM
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteHtmResponse'
  /htm:
    get:
      operationId: searchpageSiteHtm
      x-vertx-event-bus: computateorg-enUS-SiteHtm
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - HTM
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteHtmResponse'
  /api/page:
    get:
      operationId: searchSitePage
      x-vertx-event-bus: computateorg-enUS-SitePage
      description: >+
      summary: >+
      tags:
        - Page
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchSitePageResponse'
    post:
      operationId: postSitePage
      x-vertx-event-bus: computateorg-enUS-SitePage
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Page
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSitePageRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTSitePageResponse'
    patch:
      operationId: patchSitePage
      x-vertx-event-bus: computateorg-enUS-SitePage
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Page
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSitePageRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHSitePageResponse'
  /api/page-import:
    put:
      operationId: putimportSitePage
      x-vertx-event-bus: computateorg-enUS-SitePage
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Page
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportSitePageRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportSitePageResponse'
  /api/page/{id}:
    get:
      operationId: getSitePage
      x-vertx-event-bus: computateorg-enUS-SitePage
      description: >+
      summary: >+
      tags:
        - Page
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETSitePageResponse'
  /page/{id}:
    get:
      operationId: searchpageSitePageId
      x-vertx-event-bus: computateorg-enUS-SitePage
      description: >+
      summary: >+
      tags:
        - Page
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSitePageResponse'
  /page:
    get:
      operationId: searchpageSitePage
      x-vertx-event-bus: computateorg-enUS-SitePage
      description: >+
      summary: >+
      tags:
        - Page
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSitePageResponse'
  /api/pixel-art:
    get:
      operationId: searchPixelArt
      x-vertx-event-bus: computateorg-enUS-PixelArt
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Pixel Art
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPixelArtResponse'
    patch:
      operationId: patchPixelArt
      x-vertx-event-bus: computateorg-enUS-PixelArt
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Pixel Art
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHPixelArtRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHPixelArtResponse'
    post:
      operationId: postPixelArt
      x-vertx-event-bus: computateorg-enUS-PixelArt
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Pixel Art
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTPixelArtRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTPixelArtResponse'
  /api/pixel-art-import:
    put:
      operationId: putimportPixelArt
      x-vertx-event-bus: computateorg-enUS-PixelArt
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Pixel Art
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          image/gif:
            schema:
              $ref: '#/components/schemas/PUTImportPixelArtRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportPixelArtResponse'
  /api/pixel-art/{id}:
    get:
      operationId: getPixelArt
      x-vertx-event-bus: computateorg-enUS-PixelArt
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Pixel Art
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETPixelArtResponse'
  /pixel-art/{id}:
    get:
      operationId: searchpagePixelArtId
      x-vertx-event-bus: computateorg-enUS-PixelArt
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Pixel Art
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPagePixelArtResponse'
  /pixel-art:
    get:
      operationId: searchpagePixelArt
      x-vertx-event-bus: computateorg-enUS-PixelArt
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Pixel Art
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPagePixelArtResponse'
  /api/user:
    get:
      operationId: searchSiteUser
      x-vertx-event-bus: computateorg-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchSiteUserResponse'
    patch:
      operationId: patchSiteUser
      x-vertx-event-bus: computateorg-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHSiteUserResponse'
    post:
      operationId: postSiteUser
      x-vertx-event-bus: computateorg-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTSiteUserResponse'
  /api/user-import:
    put:
      operationId: putimportSiteUser
      x-vertx-event-bus: computateorg-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportSiteUserResponse'
  /user/{id}:
    get:
      operationId: searchpageSiteUserId
      x-vertx-event-bus: computateorg-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteUserResponse'
  /user:
    get:
      operationId: searchpageSiteUser
      x-vertx-event-bus: computateorg-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteUserResponse'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    openIdConnect:
      type: openIdConnect
      openIdConnectUrl: https://sso.computate.org/auth/realms/COMPUTATE.ORG/.well-known/openid-configuration
  requestBodies:
    SearchArticleResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchArticleResponse'
    PATCHArticleRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHArticleRequest'
    PATCHArticleResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHArticleResponse'
    POSTArticleRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTArticleRequest'
    POSTArticleResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTArticleResponse'
    PUTImportArticleRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportArticleRequest'
    PUTImportArticleResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportArticleResponse'
    GETArticleResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETArticleResponse'
    SearchPageArticleResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageArticleResponse'
    SearchCourseResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchCourseResponse'
    GETCourseResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETCourseResponse'
    SearchPageCourseResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageCourseResponse'
    SearchPageC001Response:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageC001Response'
    SearchPageC001LessonResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageC001LessonResponse'
    SearchSiteHtmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSiteHtmResponse'
    POSTSiteHtmRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSiteHtmRequest'
    POSTSiteHtmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSiteHtmResponse'
    PATCHSiteHtmRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSiteHtmRequest'
    PATCHSiteHtmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSiteHtmResponse'
    PUTImportSiteHtmRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportSiteHtmRequest'
    PUTImportSiteHtmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportSiteHtmResponse'
    GETSiteHtmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSiteHtmResponse'
    SearchPageSiteHtmResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSiteHtmResponse'
    SearchSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSitePageResponse'
    POSTSitePageRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSitePageRequest'
    POSTSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSitePageResponse'
    PATCHSitePageRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSitePageRequest'
    PATCHSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSitePageResponse'
    PUTImportSitePageRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportSitePageRequest'
    PUTImportSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportSitePageResponse'
    GETSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSitePageResponse'
    SearchPageSitePageResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSitePageResponse'
    SearchPixelArtResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPixelArtResponse'
    PATCHPixelArtRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHPixelArtRequest'
    PATCHPixelArtResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHPixelArtResponse'
    POSTPixelArtRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTPixelArtRequest'
    POSTPixelArtResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTPixelArtResponse'
    PUTImportPixelArtRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportPixelArtRequest'
    PUTImportPixelArtResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportPixelArtResponse'
    GETPixelArtResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETPixelArtResponse'
    SearchPagePixelArtResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPagePixelArtResponse'
    SearchSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSiteUserResponse'
    PATCHSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserRequest'
    PATCHSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserResponse'
    POSTSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSiteUserRequest'
    POSTSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSiteUserResponse'
    PUTImportSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportSiteUserRequest'
    PUTImportSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportSiteUserResponse'
    SearchPageSiteUserResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSiteUserResponse'
  schemas:
    SearchArticleResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  staticBaseUrl:
                    type: string
                  domainName:
                    type: string
                  siteName:
                    type: string
                  siteHostName:
                    type: string
                  sitePackageName:
                    type: string
                  computerHostName:
                    type: string
                  userName:
                    type: string
                  cheminProjet:
                    type: string
                  groupName:
                    type: string
                  isCourse:
                    type: boolean
                  isLesson:
                    type: boolean
                  isArticle:
                    type: boolean
                  courseNumber:
                    type: string
                  lessonNumber:
                    type: string
                  lessonDescription:
                    type: string
                  articleH1_enUS:
                    type: string
                  articleH1_frFR:
                    type: string
                  articleH2_enUS:
                    type: string
                  articleH2_frFR:
                    type: string
                  articleH1:
                    type: string
                  articleH2:
                    type: string
                  articleDescription:
                    type: string
                  pageDescription:
                    type: string
                  articleCreated:
                    type: string
                    format: date-time
                  pageUri_enUS:
                    type: string
                  pageUri_frFR:
                    type: string
                  pageUri:
                    type: string
                  pageImageUri_enUS:
                    type: string
                  pageImageUri_frFR:
                    type: string
                  pageImageUri:
                    type: string
                  pageCreated:
                    type: string
                    format: date-time
                  pageH1:
                    type: string
                  pageH2:
                    type: string
                  pageH3:
                    type: string
                  pageTitle:
                    type: string
                  pageSearch_enUS:
                    type: array
                    items:
                      type: string
                  pageSearch_frFR:
                    type: array
                    items:
                      type: string
                  userId:
                    type: string
                  inheritPk:
                    type: string
                  created:
                    type: string
                    format: date-time
                  modified:
                    type: string
                    format: date-time
                  archived:
                    type: boolean
                  deleted:
                    type: boolean
                  classCanonicalName:
                    type: string
                  classSimpleName:
                    type: string
                  classCanonicalNames:
                    type: array
                    items:
                      type: string
                  sessionId:
                    type: string
                  userKey:
                    type: string
                  saves:
                    type: array
                    items:
                      type: string
                  objectTitle:
                    type: string
                  objectId:
                    type: string
                  objectNameVar:
                    type: string
                  objectSuggest:
                    type: string
                  objectText:
                    type: string
                  pageUrlId:
                    type: string
                  pageUrlPk:
                    type: string
                  pageUrlApi:
                    type: string
                  id:
                    type: string
    PATCHArticleRequest:
      allOf:
        - type: object
          properties:
            setStaticBaseUrl:
              type: string
              nullable: true
            removeStaticBaseUrl:
              type: string
            removeAllStaticBaseUrl:
              type: string
            setDomainName:
              type: string
              nullable: true
            removeDomainName:
              type: string
            removeAllDomainName:
              type: string
            setSiteName:
              type: string
              nullable: true
            removeSiteName:
              type: string
            removeAllSiteName:
              type: string
            setSiteHostName:
              type: string
              nullable: true
            removeSiteHostName:
              type: string
            removeAllSiteHostName:
              type: string
            setSitePackageName:
              type: string
              nullable: true
            removeSitePackageName:
              type: string
            removeAllSitePackageName:
              type: string
            setComputerHostName:
              type: string
              nullable: true
            removeComputerHostName:
              type: string
            removeAllComputerHostName:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setCheminProjet:
              type: string
              nullable: true
            removeCheminProjet:
              type: string
            removeAllCheminProjet:
              type: string
            setGroupName:
              type: string
              nullable: true
            removeGroupName:
              type: string
            removeAllGroupName:
              type: string
            setIsCourse:
              type: boolean
              nullable: true
            removeIsCourse:
              type: boolean
            removeAllIsCourse:
              type: boolean
            setIsLesson:
              type: boolean
              nullable: true
            removeIsLesson:
              type: boolean
            removeAllIsLesson:
              type: boolean
            setIsArticle:
              type: boolean
              nullable: true
            removeIsArticle:
              type: boolean
            removeAllIsArticle:
              type: boolean
            setCourseNumber:
              type: string
              nullable: true
            removeCourseNumber:
              type: string
            removeAllCourseNumber:
              type: string
            setLessonNumber:
              type: string
              nullable: true
            removeLessonNumber:
              type: string
            removeAllLessonNumber:
              type: string
            setLessonDescription:
              type: string
              nullable: true
            removeLessonDescription:
              type: string
            removeAllLessonDescription:
              type: string
            setArticleH1_enUS:
              type: string
              nullable: true
            removeArticleH1_enUS:
              type: string
            removeAllArticleH1_enUS:
              type: string
            setArticleH1_frFR:
              type: string
              nullable: true
            removeArticleH1_frFR:
              type: string
            removeAllArticleH1_frFR:
              type: string
            setArticleH2_enUS:
              type: string
              nullable: true
            removeArticleH2_enUS:
              type: string
            removeAllArticleH2_enUS:
              type: string
            setArticleH2_frFR:
              type: string
              nullable: true
            removeArticleH2_frFR:
              type: string
            removeAllArticleH2_frFR:
              type: string
            setArticleH1:
              type: string
              nullable: true
            removeArticleH1:
              type: string
            removeAllArticleH1:
              type: string
            setArticleH2:
              type: string
              nullable: true
            removeArticleH2:
              type: string
            removeAllArticleH2:
              type: string
            setArticleDescription:
              type: string
              nullable: true
            removeArticleDescription:
              type: string
            removeAllArticleDescription:
              type: string
            setPageDescription:
              type: string
              nullable: true
            removePageDescription:
              type: string
            removeAllPageDescription:
              type: string
            setArticleCreated:
              type: string
              nullable: true
              format: date-time
            removeArticleCreated:
              type: string
              format: date-time
            removeAllArticleCreated:
              type: string
              format: date-time
            setPageUri_enUS:
              type: string
              nullable: true
            removePageUri_enUS:
              type: string
            removeAllPageUri_enUS:
              type: string
            setPageUri_frFR:
              type: string
              nullable: true
            removePageUri_frFR:
              type: string
            removeAllPageUri_frFR:
              type: string
            setPageUri:
              type: string
              nullable: true
            removePageUri:
              type: string
            removeAllPageUri:
              type: string
            setPageImageUri_enUS:
              type: string
              nullable: true
            removePageImageUri_enUS:
              type: string
            removeAllPageImageUri_enUS:
              type: string
            setPageImageUri_frFR:
              type: string
              nullable: true
            removePageImageUri_frFR:
              type: string
            removeAllPageImageUri_frFR:
              type: string
            setPageImageUri:
              type: string
              nullable: true
            removePageImageUri:
              type: string
            removeAllPageImageUri:
              type: string
            setPageCreated:
              type: string
              nullable: true
              format: date-time
            removePageCreated:
              type: string
              format: date-time
            removeAllPageCreated:
              type: string
              format: date-time
            setPageH1:
              type: string
              nullable: true
            removePageH1:
              type: string
            removeAllPageH1:
              type: string
            setPageH2:
              type: string
              nullable: true
            removePageH2:
              type: string
            removeAllPageH2:
              type: string
            setPageH3:
              type: string
              nullable: true
            removePageH3:
              type: string
            removeAllPageH3:
              type: string
            setPageTitle:
              type: string
              nullable: true
            removePageTitle:
              type: string
            removeAllPageTitle:
              type: string
            setPageSearch_enUS:
              type: array
              nullable: true
              items:
                type: string
            removePageSearch_enUS:
              type: string
            removeAllPageSearch_enUS:
              type: array
              items:
                type: string
            addPageSearch_enUS:
              type: string
            addAllPageSearch_enUS:
              type: array
              items:
                type: string
            setPageSearch_frFR:
              type: array
              nullable: true
              items:
                type: string
            removePageSearch_frFR:
              type: string
            removeAllPageSearch_frFR:
              type: array
              items:
                type: string
            addPageSearch_frFR:
              type: string
            addAllPageSearch_frFR:
              type: array
              items:
                type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setInheritPk:
              type: string
              nullable: true
            removeInheritPk:
              type: string
            removeAllInheritPk:
              type: string
            setCreated:
              type: string
              nullable: true
              format: date-time
            removeCreated:
              type: string
              format: date-time
            removeAllCreated:
              type: string
              format: date-time
            setModified:
              type: string
              nullable: true
              format: date-time
            removeModified:
              type: string
              format: date-time
            removeAllModified:
              type: string
              format: date-time
            setArchived:
              type: boolean
              nullable: true
            removeArchived:
              type: boolean
            removeAllArchived:
              type: boolean
            setDeleted:
              type: boolean
              nullable: true
            removeDeleted:
              type: boolean
            removeAllDeleted:
              type: boolean
            setClassCanonicalName:
              type: string
              nullable: true
            removeClassCanonicalName:
              type: string
            removeAllClassCanonicalName:
              type: string
            setClassSimpleName:
              type: string
              nullable: true
            removeClassSimpleName:
              type: string
            removeAllClassSimpleName:
              type: string
            setClassCanonicalNames:
              type: array
              nullable: true
              items:
                type: string
            removeClassCanonicalNames:
              type: string
            removeAllClassCanonicalNames:
              type: array
              items:
                type: string
            addClassCanonicalNames:
              type: string
            addAllClassCanonicalNames:
              type: array
              items:
                type: string
            setSessionId:
              type: string
              nullable: true
            removeSessionId:
              type: string
            removeAllSessionId:
              type: string
            setUserKey:
              type: string
              nullable: true
            removeUserKey:
              type: string
            removeAllUserKey:
              type: string
            setSaves:
              type: array
              nullable: true
              items:
                type: string
            removeSaves:
              type: string
            removeAllSaves:
              type: array
              items:
                type: string
            addSaves:
              type: string
            addAllSaves:
              type: array
              items:
                type: string
            setObjectTitle:
              type: string
              nullable: true
            removeObjectTitle:
              type: string
            removeAllObjectTitle:
              type: string
            setObjectId:
              type: string
              nullable: true
            removeObjectId:
              type: string
            removeAllObjectId:
              type: string
            setObjectNameVar:
              type: string
              nullable: true
            removeObjectNameVar:
              type: string
            removeAllObjectNameVar:
              type: string
            setObjectSuggest:
              type: string
              nullable: true
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
            setObjectText:
              type: string
              nullable: true
            removeObjectText:
              type: string
            removeAllObjectText:
              type: string
            setPageUrlId:
              type: string
              nullable: true
            removePageUrlId:
              type: string
            removeAllPageUrlId:
              type: string
            setPageUrlPk:
              type: string
              nullable: true
            removePageUrlPk:
              type: string
            removeAllPageUrlPk:
              type: string
            setPageUrlApi:
              type: string
              nullable: true
            removePageUrlApi:
              type: string
            removeAllPageUrlApi:
              type: string
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
    PATCHArticleResponse:
      allOf:
        - type: object
          properties:
            setStaticBaseUrl:
              type: string
              nullable: true
            removeStaticBaseUrl:
              type: string
            removeAllStaticBaseUrl:
              type: string
            setDomainName:
              type: string
              nullable: true
            removeDomainName:
              type: string
            removeAllDomainName:
              type: string
            setSiteName:
              type: string
              nullable: true
            removeSiteName:
              type: string
            removeAllSiteName:
              type: string
            setSiteHostName:
              type: string
              nullable: true
            removeSiteHostName:
              type: string
            removeAllSiteHostName:
              type: string
            setSitePackageName:
              type: string
              nullable: true
            removeSitePackageName:
              type: string
            removeAllSitePackageName:
              type: string
            setComputerHostName:
              type: string
              nullable: true
            removeComputerHostName:
              type: string
            removeAllComputerHostName:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setCheminProjet:
              type: string
              nullable: true
            removeCheminProjet:
              type: string
            removeAllCheminProjet:
              type: string
            setGroupName:
              type: string
              nullable: true
            removeGroupName:
              type: string
            removeAllGroupName:
              type: string
            setIsCourse:
              type: boolean
              nullable: true
            removeIsCourse:
              type: boolean
            removeAllIsCourse:
              type: boolean
            setIsLesson:
              type: boolean
              nullable: true
            removeIsLesson:
              type: boolean
            removeAllIsLesson:
              type: boolean
            setIsArticle:
              type: boolean
              nullable: true
            removeIsArticle:
              type: boolean
            removeAllIsArticle:
              type: boolean
            setCourseNumber:
              type: string
              nullable: true
            removeCourseNumber:
              type: string
            removeAllCourseNumber:
              type: string
            setLessonNumber:
              type: string
              nullable: true
            removeLessonNumber:
              type: string
            removeAllLessonNumber:
              type: string
            setLessonDescription:
              type: string
              nullable: true
            removeLessonDescription:
              type: string
            removeAllLessonDescription:
              type: string
            setArticleH1_enUS:
              type: string
              nullable: true
            removeArticleH1_enUS:
              type: string
            removeAllArticleH1_enUS:
              type: string
            setArticleH1_frFR:
              type: string
              nullable: true
            removeArticleH1_frFR:
              type: string
            removeAllArticleH1_frFR:
              type: string
            setArticleH2_enUS:
              type: string
              nullable: true
            removeArticleH2_enUS:
              type: string
            removeAllArticleH2_enUS:
              type: string
            setArticleH2_frFR:
              type: string
              nullable: true
            removeArticleH2_frFR:
              type: string
            removeAllArticleH2_frFR:
              type: string
            setArticleH1:
              type: string
              nullable: true
            removeArticleH1:
              type: string
            removeAllArticleH1:
              type: string
            setArticleH2:
              type: string
              nullable: true
            removeArticleH2:
              type: string
            removeAllArticleH2:
              type: string
            setArticleDescription:
              type: string
              nullable: true
            removeArticleDescription:
              type: string
            removeAllArticleDescription:
              type: string
            setPageDescription:
              type: string
              nullable: true
            removePageDescription:
              type: string
            removeAllPageDescription:
              type: string
            setArticleCreated:
              type: string
              nullable: true
              format: date-time
            removeArticleCreated:
              type: string
              format: date-time
            removeAllArticleCreated:
              type: string
              format: date-time
            setPageUri_enUS:
              type: string
              nullable: true
            removePageUri_enUS:
              type: string
            removeAllPageUri_enUS:
              type: string
            setPageUri_frFR:
              type: string
              nullable: true
            removePageUri_frFR:
              type: string
            removeAllPageUri_frFR:
              type: string
            setPageUri:
              type: string
              nullable: true
            removePageUri:
              type: string
            removeAllPageUri:
              type: string
            setPageImageUri_enUS:
              type: string
              nullable: true
            removePageImageUri_enUS:
              type: string
            removeAllPageImageUri_enUS:
              type: string
            setPageImageUri_frFR:
              type: string
              nullable: true
            removePageImageUri_frFR:
              type: string
            removeAllPageImageUri_frFR:
              type: string
            setPageImageUri:
              type: string
              nullable: true
            removePageImageUri:
              type: string
            removeAllPageImageUri:
              type: string
            setPageCreated:
              type: string
              nullable: true
              format: date-time
            removePageCreated:
              type: string
              format: date-time
            removeAllPageCreated:
              type: string
              format: date-time
            setPageH1:
              type: string
              nullable: true
            removePageH1:
              type: string
            removeAllPageH1:
              type: string
            setPageH2:
              type: string
              nullable: true
            removePageH2:
              type: string
            removeAllPageH2:
              type: string
            setPageH3:
              type: string
              nullable: true
            removePageH3:
              type: string
            removeAllPageH3:
              type: string
            setPageTitle:
              type: string
              nullable: true
            removePageTitle:
              type: string
            removeAllPageTitle:
              type: string
            setPageSearch_enUS:
              type: array
              nullable: true
              items:
                type: string
            removePageSearch_enUS:
              type: string
            removeAllPageSearch_enUS:
              type: array
              items:
                type: string
            addPageSearch_enUS:
              type: string
            addAllPageSearch_enUS:
              type: array
              items:
                type: string
            setPageSearch_frFR:
              type: array
              nullable: true
              items:
                type: string
            removePageSearch_frFR:
              type: string
            removeAllPageSearch_frFR:
              type: array
              items:
                type: string
            addPageSearch_frFR:
              type: string
            addAllPageSearch_frFR:
              type: array
              items:
                type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setInheritPk:
              type: string
              nullable: true
            removeInheritPk:
              type: string
            removeAllInheritPk:
              type: string
            setCreated:
              type: string
              nullable: true
              format: date-time
            removeCreated:
              type: string
              format: date-time
            removeAllCreated:
              type: string
              format: date-time
            setModified:
              type: string
              nullable: true
              format: date-time
            removeModified:
              type: string
              format: date-time
            removeAllModified:
              type: string
              format: date-time
            setArchived:
              type: boolean
              nullable: true
            removeArchived:
              type: boolean
            removeAllArchived:
              type: boolean
            setDeleted:
              type: boolean
              nullable: true
            removeDeleted:
              type: boolean
            removeAllDeleted:
              type: boolean
            setClassCanonicalName:
              type: string
              nullable: true
            removeClassCanonicalName:
              type: string
            removeAllClassCanonicalName:
              type: string
            setClassSimpleName:
              type: string
              nullable: true
            removeClassSimpleName:
              type: string
            removeAllClassSimpleName:
              type: string
            setClassCanonicalNames:
              type: array
              nullable: true
              items:
                type: string
            removeClassCanonicalNames:
              type: string
            removeAllClassCanonicalNames:
              type: array
              items:
                type: string
            addClassCanonicalNames:
              type: string
            addAllClassCanonicalNames:
              type: array
              items:
                type: string
            setSessionId:
              type: string
              nullable: true
            removeSessionId:
              type: string
            removeAllSessionId:
              type: string
            setUserKey:
              type: string
              nullable: true
            removeUserKey:
              type: string
            removeAllUserKey:
              type: string
            setSaves:
              type: array
              nullable: true
              items:
                type: string
            removeSaves:
              type: string
            removeAllSaves:
              type: array
              items:
                type: string
            addSaves:
              type: string
            addAllSaves:
              type: array
              items:
                type: string
            setObjectTitle:
              type: string
              nullable: true
            removeObjectTitle:
              type: string
            removeAllObjectTitle:
              type: string
            setObjectId:
              type: string
              nullable: true
            removeObjectId:
              type: string
            removeAllObjectId:
              type: string
            setObjectNameVar:
              type: string
              nullable: true
            removeObjectNameVar:
              type: string
            removeAllObjectNameVar:
              type: string
            setObjectSuggest:
              type: string
              nullable: true
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
            setObjectText:
              type: string
              nullable: true
            removeObjectText:
              type: string
            removeAllObjectText:
              type: string
            setPageUrlId:
              type: string
              nullable: true
            removePageUrlId:
              type: string
            removeAllPageUrlId:
              type: string
            setPageUrlPk:
              type: string
              nullable: true
            removePageUrlPk:
              type: string
            removeAllPageUrlPk:
              type: string
            setPageUrlApi:
              type: string
              nullable: true
            removePageUrlApi:
              type: string
            removeAllPageUrlApi:
              type: string
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
    POSTArticleRequest:
      allOf:
        - type: object
          properties:
            staticBaseUrl:
              type: string
            domainName:
              type: string
            siteName:
              type: string
            siteHostName:
              type: string
            sitePackageName:
              type: string
            computerHostName:
              type: string
            userName:
              type: string
            cheminProjet:
              type: string
            groupName:
              type: string
            isCourse:
              type: boolean
            isLesson:
              type: boolean
            isArticle:
              type: boolean
            courseNumber:
              type: string
            lessonNumber:
              type: string
            lessonDescription:
              type: string
            articleH1_enUS:
              type: string
            articleH1_frFR:
              type: string
            articleH2_enUS:
              type: string
            articleH2_frFR:
              type: string
            articleH1:
              type: string
            articleH2:
              type: string
            articleDescription:
              type: string
            pageDescription:
              type: string
            articleCreated:
              type: string
              format: date-time
            pageUri_enUS:
              type: string
            pageUri_frFR:
              type: string
            pageUri:
              type: string
            pageImageUri_enUS:
              type: string
            pageImageUri_frFR:
              type: string
            pageImageUri:
              type: string
            pageCreated:
              type: string
              format: date-time
            pageH1:
              type: string
            pageH2:
              type: string
            pageH3:
              type: string
            pageTitle:
              type: string
            pageSearch_enUS:
              type: array
              items:
                type: string
            pageSearch_frFR:
              type: array
              items:
                type: string
            userId:
              type: string
            inheritPk:
              type: string
            created:
              type: string
              format: date-time
            modified:
              type: string
              format: date-time
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            id:
              type: string
    POSTArticleResponse:
      allOf:
        - type: object
          properties:
            staticBaseUrl:
              type: string
            domainName:
              type: string
            siteName:
              type: string
            siteHostName:
              type: string
            sitePackageName:
              type: string
            computerHostName:
              type: string
            userName:
              type: string
            cheminProjet:
              type: string
            groupName:
              type: string
            isCourse:
              type: boolean
            isLesson:
              type: boolean
            isArticle:
              type: boolean
            courseNumber:
              type: string
            lessonNumber:
              type: string
            lessonDescription:
              type: string
            articleH1_enUS:
              type: string
            articleH1_frFR:
              type: string
            articleH2_enUS:
              type: string
            articleH2_frFR:
              type: string
            articleH1:
              type: string
            articleH2:
              type: string
            articleDescription:
              type: string
            pageDescription:
              type: string
            articleCreated:
              type: string
              format: date-time
            pageUri_enUS:
              type: string
            pageUri_frFR:
              type: string
            pageUri:
              type: string
            pageImageUri_enUS:
              type: string
            pageImageUri_frFR:
              type: string
            pageImageUri:
              type: string
            pageCreated:
              type: string
              format: date-time
            pageH1:
              type: string
            pageH2:
              type: string
            pageH3:
              type: string
            pageTitle:
              type: string
            pageSearch_enUS:
              type: array
              items:
                type: string
            pageSearch_frFR:
              type: array
              items:
                type: string
            userId:
              type: string
            inheritPk:
              type: string
            created:
              type: string
              format: date-time
            modified:
              type: string
              format: date-time
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            id:
              type: string
    PUTImportArticleRequest:
      allOf:
        - type: object
          properties:
            staticBaseUrl:
              type: string
            domainName:
              type: string
            siteName:
              type: string
            siteHostName:
              type: string
            sitePackageName:
              type: string
            computerHostName:
              type: string
            userName:
              type: string
            cheminProjet:
              type: string
            groupName:
              type: string
            isCourse:
              type: boolean
            isLesson:
              type: boolean
            isArticle:
              type: boolean
            courseNumber:
              type: string
            lessonNumber:
              type: string
            lessonDescription:
              type: string
            articleH1_enUS:
              type: string
            articleH1_frFR:
              type: string
            articleH2_enUS:
              type: string
            articleH2_frFR:
              type: string
            articleH1:
              type: string
            articleH2:
              type: string
            articleDescription:
              type: string
            pageDescription:
              type: string
            articleCreated:
              type: string
              format: date-time
            pageUri_enUS:
              type: string
            pageUri_frFR:
              type: string
            pageUri:
              type: string
            pageImageUri_enUS:
              type: string
            pageImageUri_frFR:
              type: string
            pageImageUri:
              type: string
            pageCreated:
              type: string
              format: date-time
            pageH1:
              type: string
            pageH2:
              type: string
            pageH3:
              type: string
            pageTitle:
              type: string
            pageSearch_enUS:
              type: array
              items:
                type: string
            pageSearch_frFR:
              type: array
              items:
                type: string
            userId:
              type: string
            inheritPk:
              type: string
            created:
              type: string
              format: date-time
            modified:
              type: string
              format: date-time
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            id:
              type: string
    PUTImportArticleResponse:
      allOf:
        - type: object
          properties:
            staticBaseUrl:
              type: string
            domainName:
              type: string
            siteName:
              type: string
            siteHostName:
              type: string
            sitePackageName:
              type: string
            computerHostName:
              type: string
            userName:
              type: string
            cheminProjet:
              type: string
            groupName:
              type: string
            isCourse:
              type: boolean
            isLesson:
              type: boolean
            isArticle:
              type: boolean
            courseNumber:
              type: string
            lessonNumber:
              type: string
            lessonDescription:
              type: string
            articleH1_enUS:
              type: string
            articleH1_frFR:
              type: string
            articleH2_enUS:
              type: string
            articleH2_frFR:
              type: string
            articleH1:
              type: string
            articleH2:
              type: string
            articleDescription:
              type: string
            pageDescription:
              type: string
            articleCreated:
              type: string
              format: date-time
            pageUri_enUS:
              type: string
            pageUri_frFR:
              type: string
            pageUri:
              type: string
            pageImageUri_enUS:
              type: string
            pageImageUri_frFR:
              type: string
            pageImageUri:
              type: string
            pageCreated:
              type: string
              format: date-time
            pageH1:
              type: string
            pageH2:
              type: string
            pageH3:
              type: string
            pageTitle:
              type: string
            pageSearch_enUS:
              type: array
              items:
                type: string
            pageSearch_frFR:
              type: array
              items:
                type: string
            userId:
              type: string
            inheritPk:
              type: string
            created:
              type: string
              format: date-time
            modified:
              type: string
              format: date-time
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            id:
              type: string
    GETArticleResponse:
      allOf:
        - type: object
          properties:
            staticBaseUrl:
              type: string
            domainName:
              type: string
            siteName:
              type: string
            siteHostName:
              type: string
            sitePackageName:
              type: string
            computerHostName:
              type: string
            userName:
              type: string
            cheminProjet:
              type: string
            groupName:
              type: string
            isCourse:
              type: boolean
            isLesson:
              type: boolean
            isArticle:
              type: boolean
            courseNumber:
              type: string
            lessonNumber:
              type: string
            lessonDescription:
              type: string
            articleH1_enUS:
              type: string
            articleH1_frFR:
              type: string
            articleH2_enUS:
              type: string
            articleH2_frFR:
              type: string
            articleH1:
              type: string
            articleH2:
              type: string
            articleDescription:
              type: string
            pageDescription:
              type: string
            articleCreated:
              type: string
              format: date-time
            pageUri_enUS:
              type: string
            pageUri_frFR:
              type: string
            pageUri:
              type: string
            pageImageUri_enUS:
              type: string
            pageImageUri_frFR:
              type: string
            pageImageUri:
              type: string
            pageCreated:
              type: string
              format: date-time
            pageH1:
              type: string
            pageH2:
              type: string
            pageH3:
              type: string
            pageTitle:
              type: string
            pageSearch_enUS:
              type: array
              items:
                type: string
            pageSearch_frFR:
              type: array
              items:
                type: string
            userId:
              type: string
            inheritPk:
              type: string
            created:
              type: string
              format: date-time
            modified:
              type: string
              format: date-time
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            id:
              type: string
    SearchPageArticleResponse:
      allOf:
        - type: string
    SearchCourseResponse:
      allOf:
        - $ref: "#/components/schemas/SearchArticleResponse"
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  courseIdentifierLowercase:
                    type: string
                  courseIdentifierCapitalized:
                    type: string
    GETCourseResponse:
      allOf:
        - $ref: "#/components/schemas/GETArticleResponse"
        - type: object
          properties:
            courseIdentifierLowercase:
              type: string
            courseIdentifierCapitalized:
              type: string
    SearchPageCourseResponse:
      allOf:
        - $ref: "#/components/schemas/SearchPageArticleResponse"
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  courseIdentifierLowercase:
                    type: string
                  courseIdentifierCapitalized:
                    type: string
    SearchPageC001Response:
      allOf:
        - $ref: "#/components/schemas/SearchPageCourseResponse"
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
    SearchPageC001LessonResponse:
      allOf:
        - $ref: "#/components/schemas/SearchPageC001Response"
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  leconCree:
                    type: string
                    format: date-time
    SearchSiteHtmResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  uri:
                    type: string
                  pageId:
                    type: string
                  sequenceNum:
                    type: string
                  htmGroup:
                    type: string
                  labels:
                    type: array
                    items:
                      type: string
                  eBefore:
                    type: string
                  eAfter:
                    type: string
                  a:
                    type: object
                  text:
                    type: array
                    items:
                      type: string
                  comment:
                    type: array
                    items:
                      type: string
                  tabs:
                    type: string
                  newLine:
                    type: boolean
                  htmBefore:
                    type: string
                  htmAfter:
                    type: string
    POSTSiteHtmRequest:
      allOf:
        - type: object
          properties:
            uri:
              type: string
            pageId:
              type: string
            sequenceNum:
              type: string
            htmGroup:
              type: string
            labels:
              type: array
              items:
                type: string
            eBefore:
              type: string
            eAfter:
              type: string
            a:
              type: object
            text:
              type: array
              items:
                type: string
            comment:
              type: array
              items:
                type: string
            tabs:
              type: string
            newLine:
              type: boolean
            htmBefore:
              type: string
            htmAfter:
              type: string
    POSTSiteHtmResponse:
      allOf:
        - type: object
          properties:
            uri:
              type: string
            pageId:
              type: string
            sequenceNum:
              type: string
            htmGroup:
              type: string
            labels:
              type: array
              items:
                type: string
            eBefore:
              type: string
            eAfter:
              type: string
            a:
              type: object
            text:
              type: array
              items:
                type: string
            comment:
              type: array
              items:
                type: string
            tabs:
              type: string
            newLine:
              type: boolean
            htmBefore:
              type: string
            htmAfter:
              type: string
    PATCHSiteHtmRequest:
      allOf:
        - type: object
          properties:
            setUri:
              type: string
              nullable: true
            removeUri:
              type: string
            removeAllUri:
              type: string
            setPageId:
              type: string
              nullable: true
            removePageId:
              type: string
            removeAllPageId:
              type: string
            setSequenceNum:
              type: string
              nullable: true
            removeSequenceNum:
              type: string
            removeAllSequenceNum:
              type: string
            setHtmGroup:
              type: string
              nullable: true
            removeHtmGroup:
              type: string
            removeAllHtmGroup:
              type: string
            setLabels:
              type: array
              nullable: true
              items:
                type: string
            removeLabels:
              type: string
            removeAllLabels:
              type: array
              items:
                type: string
            addLabels:
              type: string
            addAllLabels:
              type: array
              items:
                type: string
            setEBefore:
              type: string
              nullable: true
            removeEBefore:
              type: string
            removeAllEBefore:
              type: string
            setEAfter:
              type: string
              nullable: true
            removeEAfter:
              type: string
            removeAllEAfter:
              type: string
            setA:
              type: object
              nullable: true
            removeA:
              type: object
            removeAllA:
              type: object
            setText:
              type: array
              nullable: true
              items:
                type: string
            removeText:
              type: string
            removeAllText:
              type: array
              items:
                type: string
            addText:
              type: string
            addAllText:
              type: array
              items:
                type: string
            setComment:
              type: array
              nullable: true
              items:
                type: string
            removeComment:
              type: string
            removeAllComment:
              type: array
              items:
                type: string
            addComment:
              type: string
            addAllComment:
              type: array
              items:
                type: string
            setTabs:
              type: string
              nullable: true
            removeTabs:
              type: string
            removeAllTabs:
              type: string
            setNewLine:
              type: boolean
              nullable: true
            removeNewLine:
              type: boolean
            removeAllNewLine:
              type: boolean
            setHtmBefore:
              type: string
              nullable: true
            removeHtmBefore:
              type: string
            removeAllHtmBefore:
              type: string
            setHtmAfter:
              type: string
              nullable: true
            removeHtmAfter:
              type: string
            removeAllHtmAfter:
              type: string
    PATCHSiteHtmResponse:
      allOf:
        - type: object
          properties:
            setUri:
              type: string
              nullable: true
            removeUri:
              type: string
            removeAllUri:
              type: string
            setPageId:
              type: string
              nullable: true
            removePageId:
              type: string
            removeAllPageId:
              type: string
            setSequenceNum:
              type: string
              nullable: true
            removeSequenceNum:
              type: string
            removeAllSequenceNum:
              type: string
            setHtmGroup:
              type: string
              nullable: true
            removeHtmGroup:
              type: string
            removeAllHtmGroup:
              type: string
            setLabels:
              type: array
              nullable: true
              items:
                type: string
            removeLabels:
              type: string
            removeAllLabels:
              type: array
              items:
                type: string
            addLabels:
              type: string
            addAllLabels:
              type: array
              items:
                type: string
            setEBefore:
              type: string
              nullable: true
            removeEBefore:
              type: string
            removeAllEBefore:
              type: string
            setEAfter:
              type: string
              nullable: true
            removeEAfter:
              type: string
            removeAllEAfter:
              type: string
            setA:
              type: object
              nullable: true
            removeA:
              type: object
            removeAllA:
              type: object
            setText:
              type: array
              nullable: true
              items:
                type: string
            removeText:
              type: string
            removeAllText:
              type: array
              items:
                type: string
            addText:
              type: string
            addAllText:
              type: array
              items:
                type: string
            setComment:
              type: array
              nullable: true
              items:
                type: string
            removeComment:
              type: string
            removeAllComment:
              type: array
              items:
                type: string
            addComment:
              type: string
            addAllComment:
              type: array
              items:
                type: string
            setTabs:
              type: string
              nullable: true
            removeTabs:
              type: string
            removeAllTabs:
              type: string
            setNewLine:
              type: boolean
              nullable: true
            removeNewLine:
              type: boolean
            removeAllNewLine:
              type: boolean
            setHtmBefore:
              type: string
              nullable: true
            removeHtmBefore:
              type: string
            removeAllHtmBefore:
              type: string
            setHtmAfter:
              type: string
              nullable: true
            removeHtmAfter:
              type: string
            removeAllHtmAfter:
              type: string
    PUTImportSiteHtmRequest:
      allOf:
        - type: object
          properties:
            uri:
              type: string
            pageId:
              type: string
            sequenceNum:
              type: string
            htmGroup:
              type: string
            labels:
              type: array
              items:
                type: string
            eBefore:
              type: string
            eAfter:
              type: string
            a:
              type: object
            text:
              type: array
              items:
                type: string
            comment:
              type: array
              items:
                type: string
            tabs:
              type: string
            newLine:
              type: boolean
            htmBefore:
              type: string
            htmAfter:
              type: string
    PUTImportSiteHtmResponse:
      allOf:
        - type: object
          properties:
            uri:
              type: string
            pageId:
              type: string
            sequenceNum:
              type: string
            htmGroup:
              type: string
            labels:
              type: array
              items:
                type: string
            eBefore:
              type: string
            eAfter:
              type: string
            a:
              type: object
            text:
              type: array
              items:
                type: string
            comment:
              type: array
              items:
                type: string
            tabs:
              type: string
            newLine:
              type: boolean
            htmBefore:
              type: string
            htmAfter:
              type: string
    GETSiteHtmResponse:
      allOf:
        - type: object
          properties:
            uri:
              type: string
            pageId:
              type: string
            sequenceNum:
              type: string
            htmGroup:
              type: string
            labels:
              type: array
              items:
                type: string
            eBefore:
              type: string
            eAfter:
              type: string
            a:
              type: object
            text:
              type: array
              items:
                type: string
            comment:
              type: array
              items:
                type: string
            tabs:
              type: string
            newLine:
              type: boolean
            htmBefore:
              type: string
            htmAfter:
              type: string
    SearchPageSiteHtmResponse:
      allOf:
        - type: string
    SearchSitePageResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  siteName:
                    type: string
                  siteDisplayName:
                    type: string
                  staticBaseUrl:
                    type: string
                  staticPath:
                    type: string
                  siteBaseUrl:
                    type: string
                  courseNum:
                    type: string
                  lessonNum:
                    type: string
                  uri:
                    type: string
                  pageId:
                    type: string
                  h1:
                    type: string
                  h2:
                    type: string
                  author:
                    type: string
                  pageImageUri:
                    type: string
                  pageImageWidth:
                    type: string
                  pageImageHeight:
                    type: string
                  pageImageType:
                    type: string
    POSTSitePageRequest:
      allOf:
        - type: object
          properties:
            siteName:
              type: string
            siteDisplayName:
              type: string
            staticBaseUrl:
              type: string
            staticPath:
              type: string
            siteBaseUrl:
              type: string
            courseNum:
              type: string
            lessonNum:
              type: string
            uri:
              type: string
            pageId:
              type: string
            h1:
              type: string
            h2:
              type: string
            author:
              type: string
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
    POSTSitePageResponse:
      allOf:
        - type: object
          properties:
            siteName:
              type: string
            siteDisplayName:
              type: string
            staticBaseUrl:
              type: string
            staticPath:
              type: string
            siteBaseUrl:
              type: string
            courseNum:
              type: string
            lessonNum:
              type: string
            uri:
              type: string
            pageId:
              type: string
            h1:
              type: string
            h2:
              type: string
            author:
              type: string
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
    PATCHSitePageRequest:
      allOf:
        - type: object
          properties:
            setSiteName:
              type: string
              nullable: true
            removeSiteName:
              type: string
            removeAllSiteName:
              type: string
            setSiteDisplayName:
              type: string
              nullable: true
            removeSiteDisplayName:
              type: string
            removeAllSiteDisplayName:
              type: string
            setStaticBaseUrl:
              type: string
              nullable: true
            removeStaticBaseUrl:
              type: string
            removeAllStaticBaseUrl:
              type: string
            setStaticPath:
              type: string
              nullable: true
            removeStaticPath:
              type: string
            removeAllStaticPath:
              type: string
            setSiteBaseUrl:
              type: string
              nullable: true
            removeSiteBaseUrl:
              type: string
            removeAllSiteBaseUrl:
              type: string
            setCourseNum:
              type: string
              nullable: true
            removeCourseNum:
              type: string
            removeAllCourseNum:
              type: string
            setLessonNum:
              type: string
              nullable: true
            removeLessonNum:
              type: string
            removeAllLessonNum:
              type: string
            setUri:
              type: string
              nullable: true
            removeUri:
              type: string
            removeAllUri:
              type: string
            setPageId:
              type: string
              nullable: true
            removePageId:
              type: string
            removeAllPageId:
              type: string
            setH1:
              type: string
              nullable: true
            removeH1:
              type: string
            removeAllH1:
              type: string
            setH2:
              type: string
              nullable: true
            removeH2:
              type: string
            removeAllH2:
              type: string
            setAuthor:
              type: string
              nullable: true
            removeAuthor:
              type: string
            removeAllAuthor:
              type: string
            setPageImageUri:
              type: string
              nullable: true
            removePageImageUri:
              type: string
            removeAllPageImageUri:
              type: string
            setPageImageWidth:
              type: string
              nullable: true
            removePageImageWidth:
              type: string
            removeAllPageImageWidth:
              type: string
            setPageImageHeight:
              type: string
              nullable: true
            removePageImageHeight:
              type: string
            removeAllPageImageHeight:
              type: string
            setPageImageType:
              type: string
              nullable: true
            removePageImageType:
              type: string
            removeAllPageImageType:
              type: string
    PATCHSitePageResponse:
      allOf:
        - type: object
          properties:
            setSiteName:
              type: string
              nullable: true
            removeSiteName:
              type: string
            removeAllSiteName:
              type: string
            setSiteDisplayName:
              type: string
              nullable: true
            removeSiteDisplayName:
              type: string
            removeAllSiteDisplayName:
              type: string
            setStaticBaseUrl:
              type: string
              nullable: true
            removeStaticBaseUrl:
              type: string
            removeAllStaticBaseUrl:
              type: string
            setStaticPath:
              type: string
              nullable: true
            removeStaticPath:
              type: string
            removeAllStaticPath:
              type: string
            setSiteBaseUrl:
              type: string
              nullable: true
            removeSiteBaseUrl:
              type: string
            removeAllSiteBaseUrl:
              type: string
            setCourseNum:
              type: string
              nullable: true
            removeCourseNum:
              type: string
            removeAllCourseNum:
              type: string
            setLessonNum:
              type: string
              nullable: true
            removeLessonNum:
              type: string
            removeAllLessonNum:
              type: string
            setUri:
              type: string
              nullable: true
            removeUri:
              type: string
            removeAllUri:
              type: string
            setPageId:
              type: string
              nullable: true
            removePageId:
              type: string
            removeAllPageId:
              type: string
            setH1:
              type: string
              nullable: true
            removeH1:
              type: string
            removeAllH1:
              type: string
            setH2:
              type: string
              nullable: true
            removeH2:
              type: string
            removeAllH2:
              type: string
            setAuthor:
              type: string
              nullable: true
            removeAuthor:
              type: string
            removeAllAuthor:
              type: string
            setPageImageUri:
              type: string
              nullable: true
            removePageImageUri:
              type: string
            removeAllPageImageUri:
              type: string
            setPageImageWidth:
              type: string
              nullable: true
            removePageImageWidth:
              type: string
            removeAllPageImageWidth:
              type: string
            setPageImageHeight:
              type: string
              nullable: true
            removePageImageHeight:
              type: string
            removeAllPageImageHeight:
              type: string
            setPageImageType:
              type: string
              nullable: true
            removePageImageType:
              type: string
            removeAllPageImageType:
              type: string
    PUTImportSitePageRequest:
      allOf:
        - type: object
          properties:
            siteName:
              type: string
            siteDisplayName:
              type: string
            staticBaseUrl:
              type: string
            staticPath:
              type: string
            siteBaseUrl:
              type: string
            courseNum:
              type: string
            lessonNum:
              type: string
            uri:
              type: string
            pageId:
              type: string
            h1:
              type: string
            h2:
              type: string
            author:
              type: string
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
    PUTImportSitePageResponse:
      allOf:
        - type: object
          properties:
            siteName:
              type: string
            siteDisplayName:
              type: string
            staticBaseUrl:
              type: string
            staticPath:
              type: string
            siteBaseUrl:
              type: string
            courseNum:
              type: string
            lessonNum:
              type: string
            uri:
              type: string
            pageId:
              type: string
            h1:
              type: string
            h2:
              type: string
            author:
              type: string
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
    GETSitePageResponse:
      allOf:
        - type: object
          properties:
            siteName:
              type: string
            siteDisplayName:
              type: string
            staticBaseUrl:
              type: string
            staticPath:
              type: string
            siteBaseUrl:
              type: string
            courseNum:
              type: string
            lessonNum:
              type: string
            uri:
              type: string
            pageId:
              type: string
            h1:
              type: string
            h2:
              type: string
            author:
              type: string
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
    SearchPageSitePageResponse:
      allOf:
        - type: string
    SearchPixelArtResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  base64Data:
                    type: string
                  pixelArtName:
                    type: string
    PATCHPixelArtRequest:
      allOf:
        - type: object
          properties:
            setBase64Data:
              type: string
              nullable: true
            removeBase64Data:
              type: string
            removeAllBase64Data:
              type: string
            setPixelArtName:
              type: string
              nullable: true
            removePixelArtName:
              type: string
            removeAllPixelArtName:
              type: string
    PATCHPixelArtResponse:
      allOf:
        - type: object
          properties:
            setBase64Data:
              type: string
              nullable: true
            removeBase64Data:
              type: string
            removeAllBase64Data:
              type: string
            setPixelArtName:
              type: string
              nullable: true
            removePixelArtName:
              type: string
            removeAllPixelArtName:
              type: string
    POSTPixelArtRequest:
      allOf:
        - type: object
          properties:
            base64Data:
              type: string
            pixelArtName:
              type: string
    POSTPixelArtResponse:
      allOf:
        - type: object
          properties:
            base64Data:
              type: string
            pixelArtName:
              type: string
    PUTImportPixelArtRequest:
      allOf:
        - type: object
          properties:
            base64Data:
              type: string
            pixelArtName:
              type: string
    PUTImportPixelArtResponse:
      allOf:
        - type: object
          properties:
            base64Data:
              type: string
            pixelArtName:
              type: string
    GETPixelArtResponse:
      allOf:
        - type: object
          properties:
            base64Data:
              type: string
            pixelArtName:
              type: string
    SearchPagePixelArtResponse:
      allOf:
        - type: string
    SearchSiteUserResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  userKeys:
                    type: array
                    items:
                      type: string
                  userId:
                    type: string
                  userName:
                    type: string
                  userEmail:
                    type: string
                  userFirstName:
                    type: string
                  userLastName:
                    type: string
                  userFullName:
                    type: string
                  seeArchived:
                    type: boolean
                  seeDeleted:
                    type: boolean
    PATCHSiteUserRequest:
      allOf:
        - type: object
          properties:
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setSeeArchived:
              type: boolean
              nullable: true
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
            setSeeDeleted:
              type: boolean
              nullable: true
            removeSeeDeleted:
              type: boolean
            removeAllSeeDeleted:
              type: boolean
    PATCHSiteUserResponse:
      allOf:
        - type: object
          properties:
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setSeeArchived:
              type: boolean
              nullable: true
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
            setSeeDeleted:
              type: boolean
              nullable: true
            removeSeeDeleted:
              type: boolean
            removeAllSeeDeleted:
              type: boolean
    POSTSiteUserRequest:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    POSTSiteUserResponse:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    PUTImportSiteUserRequest:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    PUTImportSiteUserResponse:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    SearchPageSiteUserResponse:
      allOf:
        - type: string
