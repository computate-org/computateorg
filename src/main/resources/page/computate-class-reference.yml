---
pageId: computate-java-class-reference
uri: "/en-us/{{ pageId }}"
h1: Computate Java class Reference
h2: How to write Java classes that write massive amounts of code for you
created: "2022-08-09"
author:
  name: Christopher Tate
  title: Red Hat Principal Software Consultant
pageImageUri: "/png/{{ pageId }}/infographic.png"
htmTitle:
  - text: "{{ h1 }}{{ h2 }}"
htmMeta:
  - {e: meta, a: {property: "og:title", content: "{{ h1 }}"}}
  - {e: meta, a: {property: "og:description", content: "{{ h2 }}"}}
  - {e: meta, a: {property: "og:url", content: "{{ page.siteBaseUrl }}{{ uri }}"}}
  - {e: meta, a: {property: "og:site_name", content: "{{ page.siteName }}"}}
  - {e: meta, a: {property: "og:image", content: "{{ page.staticBaseUrl }}{{ pageImageUri }}"}}
  - comment: |
      CutyCapt --min-height=1 --url='{{ page.siteBaseUrl }}{{ uri }}?var=filterLabel:infographic' --out='{{ page.staticPath }}/png/{{ pageId }}/infographic.png'
      CutyCapt --min-height=1 --url='{{ page.siteBaseUrl }}{{ uri }}?var=filterLabel:image' --out='{{ page.staticPath }}/png/{{ pageId }}/image.png'
      CutyCapt --min-height=1 --url='{{ page.siteBaseUrl }}{{ uri }}?var=filterLabel:review' --out='{{ page.staticPath }}/png/{{ pageId }}/review.png'
  - {e: meta, a: {property: "og:image:width", content: "{{ page.pageImageWidth }}"}}
  - {e: meta, a: {property: "og:image:height", content: "{{ page.pageImageHeight }}"}}
  - {e: meta, a: {property: "og:image:type", content: "{{ page.pageImageType }}"}}
  - {e: meta, a: {property: "og:image:alt", content: "{{ h1 }} {{ h2 }}"}}
  - {e: meta, a: {property: "og:type", content: "article"}}
  - {e: meta, a: {property: "twitter:card", content: "summary_large_image"}}
  - {e: meta, a: {property: "twitter:title", content: "{{ h1 }}"}}
  - {e: meta, a: {property: "twitter:description", content: "{{ h2 }}"}}
  - {e: meta, a: {property: "twitter:image", content: "{{ page.staticBaseUrl }}{{ pageImageUri }}"}}
  - {e: meta, a: {property: "description", content: "{{ h2 }}"}}
htmBody:
  - e: div
    a:
      class: w3-card w3-padding w3-margin-top w3-show w3-white 
    in:
      - e: div
        in:
          - e: h1
            a:
              class: ""
            in:
              - e: i
                a:
                  class: fa-solid fa-question
              - e: span
                text: "{{ h1 }}"
          - e: h2
            a:
              class: ""
            in:
              - e: i
                a:
                  class: fa-solid fa-megaphone
              - e: span
                text: "{{ h2 }}"
          - e: div
            a:
              class: w3-row w3-mobile 
            label: 
              - infographic
              - image
            in:
          - e: div
            a:
              class: w3-row w3-mobile 
            label: 
              - infographic
              - image
            in:
              - e: img
                a:
                  class: w3-image 
                  src: "{{ page.staticBaseUrl }}/png/{{ pageId }}/image.png"
      - e: div
        in:
          - e: div
            a:
              class: w3-padding 
            in:
              - e: h3
                a:
                  class: ""
                in:
                  - e: i
                    a:
                      class: fa-solid fa-male
                  - e: span
                    text: How do I annotate the comment of my Java class to generate code? 
              - e: h4
                a:
                  class: ""
                in:
                  - e: i
                    a:
                      class: fa-solid fa-globe-americas
                  - e: span
                    text: Here is the complete reference to computating your Java class. 
              - e: li
                in:
                  - e: h5
                    a:
                      class: w3-large w3-text-2017-shaded-spruce 
                    text: |
                      Promise: true
                  - e: p
                    text: |-
                       Sometimes a Java class must be initialized asynchronously when it involves calling a blocking API. 
                       This Java class comment annotation replaces the initDeep methods with promiseDeep methods which must be initialized asynchronously as a Vert.x Promise. 
                  - e: p
                    in:
                      - e: div
                        text: |-
                          Adding protected void methods beginning with an underscore with a Promise as the only parameter will automatically set `Model: true`. 
                          For example: 
                      - e: pre
                        text: |
                          	protected void _promiseBefore(Promise<Void> promise) {
                          		promise.complete();
                          	}
                  - e: p
                    in:
                      - e: div
                        text: |-
                          Java classes with the `Model: true` will automatically set `Model: true`. 
                  - e: p
                    in:
                      - e: div
                        text: |-
                          If a super class of this Java class with `Model: true`, then the child class will also inherit `Model: true`. 
      - e: div
        label:
          - infographic
          - review
        a:
          id: divReview
        in:
          - e: table
            a:
              id: tableReview1
              class: review1Table 
            in:
              - e: tbody
                in:
                  - e: tr
                    a:
                      class: 
                    in:
                      - e: td
                        a:
                          class: w3-mobile review1TableTr1Td1 review1TableTr1Td even 
                        in:
                          - e: span
                            text: '{{formatZonedDateTime created "EEEE" "en-US" "America/Denver" }}'
                      - e: td
                        a:
                          class: w3-mobile review1TableTr1Td2 review1TableTr1Td odd 
                        in:
                          - e: i
                            a:
                              class: "{{ htmBody.0.in.0.in.0.in.0.a.class }}"
                      - e: td
                        a:
                          class: w3-mobile review1TableTr1Td3 review1TableTr1Td even 
                        in:
                          - e: i
                            a:
                              class: "{{ htmBody.0.in.0.in.1.in.0.a.class }}"
                      - e: td
                        a:
                          class: w3-mobile review1TableTr1Td4 review1TableTr1Td odd 
                        in:
                          - e: i
                            a:
                              class: "fa-solid fa-pen-nib"
                  - e: tr
                    a:
                      class: odd 
                    in:
                      - e: td
                        a:
                          class: w3-mobile review1TableTr2Td1 review1TableTr2Td even 
                        in:
                          - e: span
                            text: '{{formatZonedDateTime created "MMMM d yyyy" "en-US" "America/Denver" }}'
                      - e: td
                        a:
                          class: w3-mobile review1TableTr2Td2 review1TableTr2Td odd 
                        in:
                          - e: span
                            text: "{{ h1 }}"
                      - e: td
                        a:
                          class: w3-mobile review1TableTr2Td3 review1TableTr2Td even 
                        in:
                          - e: span
                            text: "{{ h2 }}"
                      - e: td
                        a:
                          class: w3-mobile review1TableTr2Td4 review1TableTr2Td odd 
                        in:
                          - e: span
                            text: "{{ author.name }}"
          - e: table
            a:
              id: tableReview2
              class: review2Table 
            in:
              - e: tbody
                each: htmBody.0.in.1.in
                in:
                  - e: tr
                    a:
                      class: "{{#even @index }}review2TableTr even {{else}}review2TableTr odd {{/even}}"
                    in:
                      - e: td
                        a:
                          class: w3-mobile 
                        in:
                          - e: i
                            a:
                              class: "{{ item.in.0.in.0.a.class }}"
                          - e: span
                            text: '{{item.in.0.in.1.text }}'
                      - e: td
                        a:
                          class: w3-mobile 
                        in:
                          - e: i
                            a:
                              class: "{{ item.in.1.in.0.a.class }}"
                          - e: span
                            text: '{{item.in.1.in.1.text }}'
